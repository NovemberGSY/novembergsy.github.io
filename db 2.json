{"meta":{"version":1,"warehouse":"4.0.2"},"models":{"Asset":[{"_id":"node_modules/hexo-theme-icarus/source/css/default.styl","path":"css/default.styl","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-icarus/source/css/style.styl","path":"css/style.styl","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-icarus/source/css/cyberpunk.styl","path":"css/cyberpunk.styl","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-icarus/source/img/avatar.png","path":"img/avatar.png","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-icarus/source/img/favicon.svg","path":"img/favicon.svg","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-icarus/source/img/logo.svg","path":"img/logo.svg","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-icarus/source/img/og_image.png","path":"img/og_image.png","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-icarus/source/img/razor-bottom-black.svg","path":"img/razor-bottom-black.svg","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-icarus/source/img/razor-top-black.svg","path":"img/razor-top-black.svg","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-icarus/source/js/animation.js","path":"js/animation.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-icarus/source/js/back_to_top.js","path":"js/back_to_top.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-icarus/source/js/column.js","path":"js/column.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-icarus/source/js/main.js","path":"js/main.js","modified":1,"renderable":1}],"Cache":[{"_id":"source/_posts/Linux学习.md","hash":"469998b7978cda55c4960c92c53f8cde47d5b42c","modified":1606140598000},{"_id":"source/.DS_Store","hash":"374b0d855911cb79f602707193eca7308f884cd4","modified":1675355656055},{"_id":"source/_posts/Redis学习.md","hash":"fcf127ad099a6577e709728ff0ef850ad2f206c4","modified":1601305852000},{"_id":"source/_posts/Maven学习.md","hash":"0c41607db469c5b761db293d6c9a98426af22e7d","modified":1601214030940},{"_id":"source/_posts/Spring学习.md","hash":"b66608381b13503aea22510d3f6002a254c88d0c","modified":1600088096581},{"_id":"source/_posts/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1675304012186},{"_id":"source/_posts/Servlet.md","hash":"06ecfd53c412f97d304d058f1e6f7ee6ae8ea1f3","modified":1598319392314},{"_id":"source/_posts/加快网站访问速度，wordpress.md","hash":"ab9aa45cb3174ac75512db9a5fa752b4a6390dd4","modified":1602775113000},{"_id":"source/_posts/数据结构学习.md","hash":"c0848d1558fd15f8e4b6e1d9d966050fae5e103e","modified":1603098399000},{"_id":"source/_posts/计算机组成原理复习.md","hash":"b77b9c98a1c8b6fb6f261592eaa8a8236b4e6a05","modified":1593359695000},{"_id":"source/_posts/云服务器进程查看.md","hash":"42c3dd2b9c560041c7618c4e48af2a8e6cfb29f8","modified":1597404809000},{"_id":"source/_posts/选择排序.md","hash":"19447704514d81923eb227f28cce758aea32f80d","modified":1604142794000},{"_id":"source/_posts/冒泡排序.md","hash":"67864fbae9bccaf37a0a9cd20b868945e26eaa0c","modified":1604135074000},{"_id":"node_modules/hexo-theme-icarus/layout/comment/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1675301126689},{"_id":"node_modules/hexo-theme-icarus/layout/donate/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1675301126701},{"_id":"node_modules/hexo-theme-icarus/layout/misc/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1675301126711},{"_id":"node_modules/hexo-theme-icarus/layout/search/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1675301126721},{"_id":"node_modules/hexo-theme-icarus/layout/share/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1675301126732},{"_id":"node_modules/hexo-theme-icarus/include/schema/donate/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1675301126378},{"_id":"node_modules/hexo-theme-icarus/include/schema/misc/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1675301126637},{"_id":"node_modules/hexo-theme-icarus/include/schema/search/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1675301126661},{"_id":"node_modules/hexo-theme-icarus/include/schema/share/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1675301126680},{"_id":"node_modules/hexo-theme-icarus/include/schema/comment/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1675301126184},{"_id":"node_modules/hexo-theme-icarus/package.json","hash":"9d42eb99acdaf56afbda664adea40d8d80cdb0b0","modified":1675301126852},{"_id":"node_modules/hexo-theme-icarus/include/config.js","hash":"1ff0f174e9670074ad2bee890d5b6da486800c9a","modified":1675301126770},{"_id":"node_modules/hexo-theme-icarus/include/dependency.js","hash":"0ca35dec92ccf383f45db905db1a5a0e92d7209e","modified":1675301126779},{"_id":"node_modules/hexo-theme-icarus/include/register.js","hash":"ec6596b63bfb4349ba61792d905abe8e06fea625","modified":1675301126797},{"_id":"node_modules/hexo-theme-icarus/CONTRIBUTING.md","hash":"70254c6778c1e41bb2ff222bbf3a70b2239b9bc1","modified":1675301126927},{"_id":"node_modules/hexo-theme-icarus/LICENSE","hash":"86037e5335a49321fa73b7815cab542057fac944","modified":1675301126739},{"_id":"node_modules/hexo-theme-icarus/languages/de.yml","hash":"78421f09961ca0b24756a0688fb2cb2e2696e25f","modified":1675301126979},{"_id":"node_modules/hexo-theme-icarus/languages/en.yml","hash":"3d674204d9f723c829226da745afddd180c1131d","modified":1675301126980},{"_id":"node_modules/hexo-theme-icarus/languages/es.yml","hash":"38579b8fad4b6997362acc770615bcd85ff20f68","modified":1675301126981},{"_id":"node_modules/hexo-theme-icarus/README.md","hash":"32f9f4fc8cd7ec60b30544bd2e558b593519ae5d","modified":1675301126928},{"_id":"node_modules/hexo-theme-icarus/languages/fr.yml","hash":"06d5c819d6108a42b28cff7b52e5410d0bed55d1","modified":1675301126983},{"_id":"node_modules/hexo-theme-icarus/languages/id.yml","hash":"5e48b1d62378cadeb64b88349477726a5c1bae47","modified":1675301126986},{"_id":"node_modules/hexo-theme-icarus/languages/ko.yml","hash":"e3374265377809c1518114cf352b595840c0b416","modified":1675301126987},{"_id":"node_modules/hexo-theme-icarus/languages/ja.yml","hash":"801d9930fef48d6a3f80470d5bed4f3eb78147e6","modified":1675301126986},{"_id":"node_modules/hexo-theme-icarus/languages/pt-BR.yml","hash":"ee8f73350e4c6e2f63b7fc72b34472a6b1e21244","modified":1675301126989},{"_id":"node_modules/hexo-theme-icarus/languages/pl.yml","hash":"2e7debb44cd91096f30efc87bf8d6b1d0d0214c9","modified":1675301126989},{"_id":"node_modules/hexo-theme-icarus/languages/tk.yml","hash":"ca583168bd2025124a1cd0e977da475d7a7496fd","modified":1675301126993},{"_id":"node_modules/hexo-theme-icarus/languages/ru.yml","hash":"9d91358c2acbe7a0f2a25daf7f65b999ff32d068","modified":1675301126991},{"_id":"node_modules/hexo-theme-icarus/languages/tr.yml","hash":"dd0a7bfe14848d6e1aa229198fe1db03e08e305e","modified":1675301126995},{"_id":"node_modules/hexo-theme-icarus/languages/zh-CN.yml","hash":"02475ba14afc70dfeaf5678467cee307835e4efa","modified":1675301127000},{"_id":"node_modules/hexo-theme-icarus/languages/vn.yml","hash":"5f2fffa642110c81d8f529949711c9d19ad6bbbe","modified":1675301126999},{"_id":"node_modules/hexo-theme-icarus/languages/zh-TW.yml","hash":"a6826e0c8cdb9ad286324b682b466a9e2ad78e6f","modified":1675301127002},{"_id":"node_modules/hexo-theme-icarus/layout/archive.jsx","hash":"99bf235042d0c57af15d2f108ba5eda77443fea8","modified":1675301126880},{"_id":"node_modules/hexo-theme-icarus/layout/categories.jsx","hash":"b8ad43e28a4990d222bfbb95b032f88555492347","modified":1675301126889},{"_id":"node_modules/hexo-theme-icarus/layout/layout.jsx","hash":"ac7c4e3465a116c7f05f8c2e09ee6d6b9467abf1","modified":1675301126904},{"_id":"node_modules/hexo-theme-icarus/layout/category.jsx","hash":"fd15e4eac32de9ac8687aeb3dbe179ab61375700","modified":1675301126892},{"_id":"node_modules/hexo-theme-icarus/layout/index.jsx","hash":"0a84a2348394fa9fc5080dd396bd28d357594f47","modified":1675301126902},{"_id":"node_modules/hexo-theme-icarus/scripts/index.js","hash":"0c666db6fcb4ffc4d300f4e108c00ee42b1cbbe6","modified":1675301126787},{"_id":"node_modules/hexo-theme-icarus/layout/post.jsx","hash":"d26c2db57e5a88d6483a03aeb51cda9d191d8cea","modified":1675301126913},{"_id":"node_modules/hexo-theme-icarus/include/migration/head.js","hash":"7189efe33d18927d3790e8afb06642fb293b8603","modified":1675301126782},{"_id":"node_modules/hexo-theme-icarus/layout/page.jsx","hash":"d26c2db57e5a88d6483a03aeb51cda9d191d8cea","modified":1675301126909},{"_id":"node_modules/hexo-theme-icarus/layout/tag.jsx","hash":"d2f18cac32ca2725d34ccff3f2051c623be6c892","modified":1675301126923},{"_id":"node_modules/hexo-theme-icarus/include/migration/v5_v5.1.js","hash":"073f22bd16e34b56f016633b1676dab2e7d8843d","modified":1675301126809},{"_id":"node_modules/hexo-theme-icarus/layout/tags.jsx","hash":"2c42cb64778235dd220c563a27a92108ddc50cc4","modified":1675301126924},{"_id":"node_modules/hexo-theme-icarus/include/migration/v2_v3.js","hash":"3ccb2d2ce11018bebd7172da66faecc3983bff00","modified":1675301126802},{"_id":"node_modules/hexo-theme-icarus/include/style/base.styl","hash":"2bca6ad099949d52236c87db8db1002ffb99774c","modified":1675301126946},{"_id":"node_modules/hexo-theme-icarus/include/migration/v3_v4.js","hash":"9faf2184d7fe87debfbe007f3fc9079dcbcafcfe","modified":1675301126804},{"_id":"node_modules/hexo-theme-icarus/include/style/article.styl","hash":"105c983871b6c9148d97a0f756886e56411572bd","modified":1675301126945},{"_id":"node_modules/hexo-theme-icarus/include/style/button.styl","hash":"0fb35b4786be1b387c751fa2849bc71523fcedd4","modified":1675301126947},{"_id":"node_modules/hexo-theme-icarus/include/migration/v4_v5.js","hash":"6342310892d113763b5544789b45d44c0ccf2854","modified":1675301126806},{"_id":"node_modules/hexo-theme-icarus/include/style/donate.styl","hash":"8d0af00628c13134b5f30a558608e7bebf18c2ec","modified":1675301126960},{"_id":"node_modules/hexo-theme-icarus/include/style/card.styl","hash":"f78674422eb408cd17c17bbdc3ee1ebe4a453e05","modified":1675301126948},{"_id":"node_modules/hexo-theme-icarus/include/style/footer.styl","hash":"a4ad715dee38b249538ac6cce94efc9b355a904b","modified":1675301126961},{"_id":"node_modules/hexo-theme-icarus/include/style/codeblock.styl","hash":"ec54dc24eb4d9802d8fefc44c210558bc1641109","modified":1675301126950},{"_id":"node_modules/hexo-theme-icarus/include/style/helper.styl","hash":"9f3393e6122cc9f351091bfab960674e962da343","modified":1675301126963},{"_id":"node_modules/hexo-theme-icarus/include/style/navbar.styl","hash":"34f09b144cb46a25ec2cc7260a6c207dd34ff1fe","modified":1675301126965},{"_id":"node_modules/hexo-theme-icarus/include/style/plugin.styl","hash":"084843d5a522029e0f84a4fe791fbcb2cabd4c36","modified":1675301126967},{"_id":"node_modules/hexo-theme-icarus/include/style/pagination.styl","hash":"b81bcd7ff915b4e9299533addc01bc4575ec35e3","modified":1675301126966},{"_id":"node_modules/hexo-theme-icarus/include/schema/config.json","hash":"b949c52d02d5ee520ae4666a016ce91faf6fb350","modified":1675301126838},{"_id":"node_modules/hexo-theme-icarus/include/util/console.js","hash":"59cf9d277d3ac85a496689bd811b1c316001641d","modified":1675301126776},{"_id":"node_modules/hexo-theme-icarus/include/style/search.styl","hash":"416737e1da4e7e907bd03609b0fee9e2aacfe56c","modified":1675301126968},{"_id":"node_modules/hexo-theme-icarus/include/style/timeline.styl","hash":"ea61798a09bffdda07efb93c2ff800b63bddc4c4","modified":1675301126970},{"_id":"node_modules/hexo-theme-icarus/layout/common/comment.jsx","hash":"427089c33002707b76e2f38709459a6824fd0f9b","modified":1675301126893},{"_id":"node_modules/hexo-theme-icarus/layout/common/donates.jsx","hash":"889fb0a7ccc502f0a43b4a18eb330e351e50493c","modified":1675301126897},{"_id":"node_modules/hexo-theme-icarus/layout/common/article.jsx","hash":"efe38d9c10d6421f142407651b6230e257a57451","modified":1675301126886},{"_id":"node_modules/hexo-theme-icarus/include/style/widget.styl","hash":"c746902251136544eb3fe523235b3183f4189460","modified":1675301126971},{"_id":"node_modules/hexo-theme-icarus/layout/common/head.jsx","hash":"2ec1f511f32e3a9c86d49f1338f57ae5ece18898","modified":1675301126900},{"_id":"node_modules/hexo-theme-icarus/layout/common/navbar.jsx","hash":"d96e501e52861056474659f96ee0206588d8c93a","modified":1675301126907},{"_id":"node_modules/hexo-theme-icarus/layout/common/plugins.jsx","hash":"f6826c1a5f5f59f4a0aa00c63bdb0ad4ff4eab69","modified":1675301126911},{"_id":"node_modules/hexo-theme-icarus/include/style/responsive.styl","hash":"207083fe287612cddee6608b541861b14ac8de81","modified":1675301126968},{"_id":"node_modules/hexo-theme-icarus/layout/common/scripts.jsx","hash":"4816c9099a881b5f7b13af3e42caae36edbffccd","modified":1675301126920},{"_id":"node_modules/hexo-theme-icarus/layout/common/footer.jsx","hash":"baa8e40e036a3ec0114d96893b708435104b4ba9","modified":1675301126898},{"_id":"node_modules/hexo-theme-icarus/layout/plugin/back_to_top.jsx","hash":"7fc0c5aaabd7d0eaff04cb68ec139442dc3414e8","modified":1675301126888},{"_id":"node_modules/hexo-theme-icarus/layout/common/widgets.jsx","hash":"251263b97de12f2b8d1fce2514e83430f2515b94","modified":1675301126925},{"_id":"node_modules/hexo-theme-icarus/layout/widget/profile.jsx","hash":"0d3a7fd922c12cc45d2c8d26a8f4d3a9a6ed0ae0","modified":1675301126918},{"_id":"node_modules/hexo-theme-icarus/source/css/style.styl","hash":"5b9815586e993a6ccbe8cdcfc0c65ea38fc315ac","modified":1675301126970},{"_id":"node_modules/hexo-theme-icarus/source/css/cyberpunk.styl","hash":"ae17d3528df0c3f089df14a06b7bd82f1bc5fed9","modified":1675301126958},{"_id":"node_modules/hexo-theme-icarus/layout/common/share.jsx","hash":"c9fb0319ad5e5a10ad3636b26a6c2afed14c590f","modified":1675301126922},{"_id":"node_modules/hexo-theme-icarus/layout/plugin/animejs.jsx","hash":"e2aa27c3501a58ef1e91e511557b77395c2c02aa","modified":1675301126876},{"_id":"node_modules/hexo-theme-icarus/source/img/favicon.svg","hash":"16fd847265845063a16596761cddb32926073dd2","modified":1675301126974},{"_id":"node_modules/hexo-theme-icarus/source/css/default.styl","hash":"b01da3028e5a1267a40aaae5c86a11187a2259e3","modified":1675301126959},{"_id":"node_modules/hexo-theme-icarus/source/img/avatar.png","hash":"0d8236dcca871735500e9d06bbdbe0853ed6775b","modified":1675301126932},{"_id":"node_modules/hexo-theme-icarus/source/img/logo.svg","hash":"e9b5c1438ddb576693a15d0713b2a1d9ceda4be9","modified":1675301126975},{"_id":"node_modules/hexo-theme-icarus/source/img/razor-bottom-black.svg","hash":"a3eda07b1c605b456da9cdf335a1075db5e5d72c","modified":1675301126976},{"_id":"node_modules/hexo-theme-icarus/source/img/og_image.png","hash":"b03f163096ca9c350ec962feee9836277b5c2509","modified":1675301126942},{"_id":"node_modules/hexo-theme-icarus/source/img/razor-top-black.svg","hash":"201f1171a43ce667a39091fe47c0f278857f18f0","modified":1675301126976},{"_id":"node_modules/hexo-theme-icarus/include/schema/common/article.json","hash":"e2502c39045c6a26ccd8e880858f93e78c7bda35","modified":1675301126828},{"_id":"node_modules/hexo-theme-icarus/source/js/animation.js","hash":"0a8e361c353daa3194f4de3d646b96025d128e1a","modified":1675301126755},{"_id":"node_modules/hexo-theme-icarus/include/schema/common/comment.json","hash":"f49270b619f5d2c3decde6b0b5a0c3bbab4b54a5","modified":1675301126833},{"_id":"node_modules/hexo-theme-icarus/include/schema/common/donates.json","hash":"ae86e6f177bedf4afbe638502c12635027539305","modified":1675301126840},{"_id":"node_modules/hexo-theme-icarus/include/schema/common/footer.json","hash":"09d706cbb94d6da9a0d15c719ce7139325cae1c7","modified":1675301126844},{"_id":"node_modules/hexo-theme-icarus/include/schema/common/head.json","hash":"98889f059c635e6bdbd51effd04cf1cf44968a66","modified":1675301126845},{"_id":"node_modules/hexo-theme-icarus/include/schema/common/navbar.json","hash":"6691e587284c4cf450e0288680d5ff0f3565f090","modified":1675301126847},{"_id":"node_modules/hexo-theme-icarus/source/js/column.js","hash":"0baee024ab67474c073a4c41b495f3e7f0df4505","modified":1675301126758},{"_id":"node_modules/hexo-theme-icarus/include/schema/common/plugins.json","hash":"6036a805749816416850d944f7d64aaae62e5e75","modified":1675301126857},{"_id":"node_modules/hexo-theme-icarus/include/schema/common/providers.json","hash":"97ec953d497fb53594227ae98acaef8a8baa91da","modified":1675301126863},{"_id":"node_modules/hexo-theme-icarus/include/schema/common/search.json","hash":"985fbcbf47054af714ead1a124869d54f2a8b607","modified":1675301126864},{"_id":"node_modules/hexo-theme-icarus/source/js/main.js","hash":"08a2641765eeaf712157ad134dd675e3f7708ae2","modified":1675301126792},{"_id":"node_modules/hexo-theme-icarus/include/schema/common/share.json","hash":"cf4f9ff4fb27c3541b35f57db355c228fa6873e4","modified":1675301126867},{"_id":"node_modules/hexo-theme-icarus/include/schema/common/sidebar.json","hash":"eb241beaec4c73e3085dfb3139ce72e827e20549","modified":1675301126868},{"_id":"node_modules/hexo-theme-icarus/include/schema/common/widgets.json","hash":"cadd9dc942740ecd5037d3943e72f8b6a8399bbe","modified":1675301126870},{"_id":"node_modules/hexo-theme-icarus/include/schema/plugin/animejs.json","hash":"e62ab6e20bd8862efa1ed32e7c0db0f8acbcfdec","modified":1675301126816},{"_id":"node_modules/hexo-theme-icarus/include/schema/plugin/back_to_top.json","hash":"dc0febab7e7b67075d0ad3f80f5ec8b798b68dea","modified":1675301126833},{"_id":"node_modules/hexo-theme-icarus/include/schema/widget/profile.json","hash":"690ee1b0791cab47ea03cf42b5b4932ed2aa5675","modified":1675301126861},{"_id":"node_modules/hexo-theme-icarus/source/js/back_to_top.js","hash":"d91f10c08c726135a13dfa1f422c49d8764ef03f","modified":1675301126756},{"_id":"node_modules/hexo-theme-icarus/layout/common/search.jsx","hash":"6f244a37293031670a2964fe424ecd062e591d7b","modified":1675301126920},{"_id":"public/js/algolia.js","hash":"a8df0c0abeeb4ee1d2d720161f3aea7339380704","modified":1675355670815},{"_id":"public/js/google_cse.js","hash":"1a9881669dfdeb2b3214074eee0d3e01e52db2c4","modified":1675355670815},{"_id":"public/js/insight.js","hash":"86bbdb7305d9bf19ad62d2ca2cf169fc8d9f9d31","modified":1675355670815},{"_id":"public/js/toc.js","hash":"da6fb757a1b083b8ed138bf29aad3a7bf8ec4f11","modified":1675355670815},{"_id":"public/content.json","hash":"b323de5eaa093afced73dc9c53054e9fb6e12cff","modified":1675355670815},{"_id":"public/manifest.json","hash":"f7c5f2ccd8f365af6c61f86eec38ea49326b4b4b","modified":1675355670815},{"_id":"public/2020/11/23/Linux学习/index.html","hash":"7c0d96e4301de630c8bb01461d323abba35c6133","modified":1675355670815},{"_id":"public/2020/10/31/选择排序/index.html","hash":"9fa2dc3e54aba3244b97e8956f4c81f8e6510631","modified":1675355670815},{"_id":"public/2020/10/31/冒泡排序/index.html","hash":"509bd2d963e7a6f9c7545cb42ddea0d79c9834c2","modified":1675355670815},{"_id":"public/2020/10/19/数据结构学习/index.html","hash":"2e759b0e9c62d58977571d95e45b271dbc1dc991","modified":1675355670815},{"_id":"public/2020/10/15/加快网站访问速度，wordpress/index.html","hash":"b73ee6f96f8fd923bc52dcfc616fc2bf523b2d8c","modified":1675355670815},{"_id":"public/2020/09/28/Redis学习/index.html","hash":"85f9987cbe322e11befad2c0b1d9c4b5d4c6a7fb","modified":1675355670815},{"_id":"public/2020/09/23/Maven学习/index.html","hash":"5b6aea875cc844c6ee9ba9f9bdda0b647a9d881d","modified":1675355670815},{"_id":"public/2020/09/09/Spring学习/index.html","hash":"256555dfff5a28815874fedaccab694bc7d3150d","modified":1675355670815},{"_id":"public/2020/08/25/Servlet/index.html","hash":"aea3c846297d28f55f48b141a3c215c8feeb300e","modified":1675355670815},{"_id":"public/2020/08/14/云服务器进程查看/index.html","hash":"61fc09f4513242e4f788b3224933f14811823e4a","modified":1675355670815},{"_id":"public/2020/06/28/计算机组成原理复习/index.html","hash":"374f9156924e2fc315efb083cf00631e5d0b14f9","modified":1675355670815},{"_id":"public/archives/page/2/index.html","hash":"fdf70f22de2d663a2aead7f0f5b4d1fbfb16fe5b","modified":1675355670815},{"_id":"public/archives/index.html","hash":"41a1161c672c8b40c224d214b58d81e303ec375c","modified":1675355670815},{"_id":"public/archives/2020/index.html","hash":"f03400114b4118b9b9e6cfaa957ed7a36cb04f20","modified":1675355670815},{"_id":"public/archives/2020/page/2/index.html","hash":"afcf99ae62776f4ea1285faa39865fa99ec997d5","modified":1675355670815},{"_id":"public/archives/2020/06/index.html","hash":"8afd3df2e6237523aec2c32cf12a359e26fdbdae","modified":1675355670815},{"_id":"public/archives/2020/08/index.html","hash":"4e572295c2e5e2c1741ff3f4b235f02cb2670d74","modified":1675355670815},{"_id":"public/archives/2020/09/index.html","hash":"337706c8909b8c19b22c6d8e184dad4f2018cea6","modified":1675355670815},{"_id":"public/archives/2020/10/index.html","hash":"57effa221dbcc3a329a99a745f28d4d9ed0a4c26","modified":1675355670815},{"_id":"public/archives/2020/11/index.html","hash":"ed71a77b96c4af966c96da886fb162caaca58382","modified":1675355670815},{"_id":"public/index.html","hash":"60b8de98d2363ed0a4cd0b7c9b21c73da73147f2","modified":1675355670815},{"_id":"public/page/2/index.html","hash":"8b1fa461429adefd7fa05bf29d37aa05b1f9ba58","modified":1675355670815},{"_id":"public/tags/index.html","hash":"ff44caed2dceb962b210e74f9107d517bc78136c","modified":1675355670815},{"_id":"public/categories/index.html","hash":"11b5a097fa6c3f135b2ad743e847f03885ac8429","modified":1675355670815},{"_id":"public/img/favicon.svg","hash":"16fd847265845063a16596761cddb32926073dd2","modified":1675355670815},{"_id":"public/img/logo.svg","hash":"e9b5c1438ddb576693a15d0713b2a1d9ceda4be9","modified":1675355670815},{"_id":"public/img/razor-bottom-black.svg","hash":"a3eda07b1c605b456da9cdf335a1075db5e5d72c","modified":1675355670815},{"_id":"public/img/og_image.png","hash":"b03f163096ca9c350ec962feee9836277b5c2509","modified":1675355670815},{"_id":"public/img/razor-top-black.svg","hash":"201f1171a43ce667a39091fe47c0f278857f18f0","modified":1675355670815},{"_id":"public/img/avatar.png","hash":"0d8236dcca871735500e9d06bbdbe0853ed6775b","modified":1675355670815},{"_id":"public/js/back_to_top.js","hash":"d91f10c08c726135a13dfa1f422c49d8764ef03f","modified":1675355670815},{"_id":"public/js/animation.js","hash":"0a8e361c353daa3194f4de3d646b96025d128e1a","modified":1675355670815},{"_id":"public/js/main.js","hash":"08a2641765eeaf712157ad134dd675e3f7708ae2","modified":1675355670815},{"_id":"public/js/column.js","hash":"0baee024ab67474c073a4c41b495f3e7f0df4505","modified":1675355670815},{"_id":"public/css/style.css","hash":"8717dd0ed1fe2a4237fbfb4f4f6e566cb1ee16b7","modified":1675355670815},{"_id":"public/css/cyberpunk.css","hash":"b462177bee11f76e84e649f8192d5a68cb4b1402","modified":1675355670815},{"_id":"public/css/default.css","hash":"8717dd0ed1fe2a4237fbfb4f4f6e566cb1ee16b7","modified":1675355670815}],"Category":[],"Data":[],"Page":[],"Post":[{"_content":"### Linux学习：\n\n  前言：本人部署在云服务器上使用的系统就是Linux(CentOS7版本)\n\n---\n\n整理了一些Linux命令：\n\n","source":"_posts/Linux学习.md","raw":"### Linux学习：\n\n  前言：本人部署在云服务器上使用的系统就是Linux(CentOS7版本)\n\n---\n\n整理了一些Linux命令：\n\n","slug":"Linux学习","published":1,"date":"2020-11-23T14:09:58.000Z","updated":"2020-11-23T14:09:58.000Z","title":"","comments":1,"layout":"post","photos":[],"link":"","_id":"cldnbidhl0000u99k7zc9eimw","content":"<h3 id=\"Linux学习：\"><a href=\"#Linux学习：\" class=\"headerlink\" title=\"Linux学习：\"></a>Linux学习：</h3><p>  前言：本人部署在云服务器上使用的系统就是Linux(CentOS7版本)</p>\n<hr>\n<p>整理了一些Linux命令：</p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"Linux学习：\"><a href=\"#Linux学习：\" class=\"headerlink\" title=\"Linux学习：\"></a>Linux学习：</h3><p>  前言：本人部署在云服务器上使用的系统就是Linux(CentOS7版本)</p>\n<hr>\n<p>整理了一些Linux命令：</p>\n"},{"_content":"### Redis学习\n\n#### 1、Redis是什么？\n\n-   **Redis**的全称是**(REmote DIctionary Server 远程字典服务)**，是一个由Salvatore Sanfilippo写的key-value存储系统。\n\n- Redis是一个开源的，使用ANSI（C语言标准） C语言编写，遵守BSD（“*Berkeley* Software Distribution”伯克利软件发行版）协议，支持网络，可基于内存亦可持久化的日志型，Key-Value数据库，并且提供多种语言的API。\n\n- Redis通常被称为数据结构服务器，因为其可以存储的值（Value）可以是\n\n  - String 字符串\n  - Hash 哈希\n  - List 列表\n  - Sets 集合\n  - Sorted sets 有序集合\n\n  ---\n\n  \n\n相关链接：\n\nRedis 官网：https://redis.io/\n\nRedis 在线测试：http://try.redis.io/\n\nRedis 命令参考：http://doc.redisfans.com/\n\n#### 2、Redis能做什么？\n\n1. ##### Redis 与其他 key - value 缓存产品有以下三个特点：\n\n- Redis支持数据的持久化，可以将内存中的数据保存在磁盘中，重启的时候可以再次加载进行使用。\n- Redis不仅仅支持简单的 key-value 类型的数据，同时还提供 list，set，zset，hash等数据结构的存储\n- Redis支持数据的备份，即master-slave模式的数据备份\n\n#### 3、为什么选择使用Redis？\n\n##### 关于Redis的优势：\n\n-  性能极高 —— Redis能读的速度是110000次/s，写的速度是81000次/s。\n- 丰富的数据类型 —— Redis支持二进制案例的String，Lists，Hashes，Sets 及 Ordered Sets 数据类型操作。\n- 原子 —— Redis的所有操作系统都是原子性的，意思就是要么成功执行，要么失败完全不执行。单个操作是原子性的。\n- 丰富的特性  —— Redis还支持 publish/subscribe，通知，key过期等等特性。\n\n##### Redis与其他key - value 存储有什么不同？\n\n- Redis更为复杂的数据结构并且提供对这些数据结构的原子性操作，这是一个不同于其他数据库的进化路径。Redis的数据类型都是基于基本数据结构的，同时对于程序眼透明，无需进行额外的抽象。\n- Redis运行在内存中但是可以持久化到磁盘，所以在对不同数据集进行高速读写时需要权衡内存，因为数据量不能大于硬件内存。在内存数据库方面的另一个优点是，相比在磁盘上相同的复杂数据结构，在内存中操作起来非常简单，这样Redis可以做很多内部复杂性很强的事情。\n\n#### 4、Redis的相关命令\n\n- 启动Redis（需要切换到安装Redis的bin/目录下）\n\n```shell\n$ ./redis-server   启动Redis\n```\n\n启动成功后的界面如下：\n\n\n\n![redis-install1](https://www.runoob.com/wp-content/uploads/2014/11/redis-install1.png)\n\n- 查看Redis状态（是否启动，是否使用成功）\n\n  ```shell\n  $ redis-cli  该命令会链接本地的Redis服务\n  ```\n\n- 关闭Redis\n\n  ```shell\n  $ redis-cli 进入Redis服务\n  $ shutdown save｜nosave \t系统会提示保存还是不保存\n  ```\n\n关于 save 和 nosave\n\n- **SHUTDOWN SAVE**能够在即使没有配置持久化的情况下强制数据库存储.\n- **SHUTDOWN NOSAVE** 能够在配置一个或者多个持久化策略的情况下阻止数据库存储. (你可以假想它为一个中断服务的 **ABORT** 命令).\n\n","source":"_posts/Redis学习.md","raw":"### Redis学习\n\n#### 1、Redis是什么？\n\n-   **Redis**的全称是**(REmote DIctionary Server 远程字典服务)**，是一个由Salvatore Sanfilippo写的key-value存储系统。\n\n- Redis是一个开源的，使用ANSI（C语言标准） C语言编写，遵守BSD（“*Berkeley* Software Distribution”伯克利软件发行版）协议，支持网络，可基于内存亦可持久化的日志型，Key-Value数据库，并且提供多种语言的API。\n\n- Redis通常被称为数据结构服务器，因为其可以存储的值（Value）可以是\n\n  - String 字符串\n  - Hash 哈希\n  - List 列表\n  - Sets 集合\n  - Sorted sets 有序集合\n\n  ---\n\n  \n\n相关链接：\n\nRedis 官网：https://redis.io/\n\nRedis 在线测试：http://try.redis.io/\n\nRedis 命令参考：http://doc.redisfans.com/\n\n#### 2、Redis能做什么？\n\n1. ##### Redis 与其他 key - value 缓存产品有以下三个特点：\n\n- Redis支持数据的持久化，可以将内存中的数据保存在磁盘中，重启的时候可以再次加载进行使用。\n- Redis不仅仅支持简单的 key-value 类型的数据，同时还提供 list，set，zset，hash等数据结构的存储\n- Redis支持数据的备份，即master-slave模式的数据备份\n\n#### 3、为什么选择使用Redis？\n\n##### 关于Redis的优势：\n\n-  性能极高 —— Redis能读的速度是110000次/s，写的速度是81000次/s。\n- 丰富的数据类型 —— Redis支持二进制案例的String，Lists，Hashes，Sets 及 Ordered Sets 数据类型操作。\n- 原子 —— Redis的所有操作系统都是原子性的，意思就是要么成功执行，要么失败完全不执行。单个操作是原子性的。\n- 丰富的特性  —— Redis还支持 publish/subscribe，通知，key过期等等特性。\n\n##### Redis与其他key - value 存储有什么不同？\n\n- Redis更为复杂的数据结构并且提供对这些数据结构的原子性操作，这是一个不同于其他数据库的进化路径。Redis的数据类型都是基于基本数据结构的，同时对于程序眼透明，无需进行额外的抽象。\n- Redis运行在内存中但是可以持久化到磁盘，所以在对不同数据集进行高速读写时需要权衡内存，因为数据量不能大于硬件内存。在内存数据库方面的另一个优点是，相比在磁盘上相同的复杂数据结构，在内存中操作起来非常简单，这样Redis可以做很多内部复杂性很强的事情。\n\n#### 4、Redis的相关命令\n\n- 启动Redis（需要切换到安装Redis的bin/目录下）\n\n```shell\n$ ./redis-server   启动Redis\n```\n\n启动成功后的界面如下：\n\n\n\n![redis-install1](https://www.runoob.com/wp-content/uploads/2014/11/redis-install1.png)\n\n- 查看Redis状态（是否启动，是否使用成功）\n\n  ```shell\n  $ redis-cli  该命令会链接本地的Redis服务\n  ```\n\n- 关闭Redis\n\n  ```shell\n  $ redis-cli 进入Redis服务\n  $ shutdown save｜nosave \t系统会提示保存还是不保存\n  ```\n\n关于 save 和 nosave\n\n- **SHUTDOWN SAVE**能够在即使没有配置持久化的情况下强制数据库存储.\n- **SHUTDOWN NOSAVE** 能够在配置一个或者多个持久化策略的情况下阻止数据库存储. (你可以假想它为一个中断服务的 **ABORT** 命令).\n\n","slug":"Redis学习","published":1,"date":"2020-09-28T15:10:52.000Z","updated":"2020-09-28T15:10:52.000Z","title":"","comments":1,"layout":"post","photos":[],"link":"","_id":"cldnbidht0001u99kechjfej7","content":"<h3 id=\"Redis学习\"><a href=\"#Redis学习\" class=\"headerlink\" title=\"Redis学习\"></a>Redis学习</h3><h4 id=\"1、Redis是什么？\"><a href=\"#1、Redis是什么？\" class=\"headerlink\" title=\"1、Redis是什么？\"></a>1、Redis是什么？</h4><ul>\n<li><p><strong>Redis</strong>的全称是**(REmote DIctionary Server 远程字典服务)**，是一个由Salvatore Sanfilippo写的key-value存储系统。</p>\n</li>\n<li><p>Redis是一个开源的，使用ANSI（C语言标准） C语言编写，遵守BSD（“<em>Berkeley</em> Software Distribution”伯克利软件发行版）协议，支持网络，可基于内存亦可持久化的日志型，Key-Value数据库，并且提供多种语言的API。</p>\n</li>\n<li><p>Redis通常被称为数据结构服务器，因为其可以存储的值（Value）可以是</p>\n<ul>\n<li>String 字符串</li>\n<li>Hash 哈希</li>\n<li>List 列表</li>\n<li>Sets 集合</li>\n<li>Sorted sets 有序集合</li>\n</ul>\n<hr>\n</li>\n</ul>\n<p>相关链接：</p>\n<p>Redis 官网：<a href=\"https://redis.io/\">https://redis.io/</a></p>\n<p>Redis 在线测试：<a href=\"http://try.redis.io/\">http://try.redis.io/</a></p>\n<p>Redis 命令参考：<a href=\"http://doc.redisfans.com/\">http://doc.redisfans.com/</a></p>\n<h4 id=\"2、Redis能做什么？\"><a href=\"#2、Redis能做什么？\" class=\"headerlink\" title=\"2、Redis能做什么？\"></a>2、Redis能做什么？</h4><ol>\n<li><h5 id=\"Redis-与其他-key-value-缓存产品有以下三个特点：\"><a href=\"#Redis-与其他-key-value-缓存产品有以下三个特点：\" class=\"headerlink\" title=\"Redis 与其他 key - value 缓存产品有以下三个特点：\"></a>Redis 与其他 key - value 缓存产品有以下三个特点：</h5></li>\n</ol>\n<ul>\n<li>Redis支持数据的持久化，可以将内存中的数据保存在磁盘中，重启的时候可以再次加载进行使用。</li>\n<li>Redis不仅仅支持简单的 key-value 类型的数据，同时还提供 list，set，zset，hash等数据结构的存储</li>\n<li>Redis支持数据的备份，即master-slave模式的数据备份</li>\n</ul>\n<h4 id=\"3、为什么选择使用Redis？\"><a href=\"#3、为什么选择使用Redis？\" class=\"headerlink\" title=\"3、为什么选择使用Redis？\"></a>3、为什么选择使用Redis？</h4><h5 id=\"关于Redis的优势：\"><a href=\"#关于Redis的优势：\" class=\"headerlink\" title=\"关于Redis的优势：\"></a>关于Redis的优势：</h5><ul>\n<li>性能极高 —— Redis能读的速度是110000次&#x2F;s，写的速度是81000次&#x2F;s。</li>\n<li>丰富的数据类型 —— Redis支持二进制案例的String，Lists，Hashes，Sets 及 Ordered Sets 数据类型操作。</li>\n<li>原子 —— Redis的所有操作系统都是原子性的，意思就是要么成功执行，要么失败完全不执行。单个操作是原子性的。</li>\n<li>丰富的特性  —— Redis还支持 publish&#x2F;subscribe，通知，key过期等等特性。</li>\n</ul>\n<h5 id=\"Redis与其他key-value-存储有什么不同？\"><a href=\"#Redis与其他key-value-存储有什么不同？\" class=\"headerlink\" title=\"Redis与其他key - value 存储有什么不同？\"></a>Redis与其他key - value 存储有什么不同？</h5><ul>\n<li>Redis更为复杂的数据结构并且提供对这些数据结构的原子性操作，这是一个不同于其他数据库的进化路径。Redis的数据类型都是基于基本数据结构的，同时对于程序眼透明，无需进行额外的抽象。</li>\n<li>Redis运行在内存中但是可以持久化到磁盘，所以在对不同数据集进行高速读写时需要权衡内存，因为数据量不能大于硬件内存。在内存数据库方面的另一个优点是，相比在磁盘上相同的复杂数据结构，在内存中操作起来非常简单，这样Redis可以做很多内部复杂性很强的事情。</li>\n</ul>\n<h4 id=\"4、Redis的相关命令\"><a href=\"#4、Redis的相关命令\" class=\"headerlink\" title=\"4、Redis的相关命令\"></a>4、Redis的相关命令</h4><ul>\n<li>启动Redis（需要切换到安装Redis的bin&#x2F;目录下）</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">$ </span><span class=\"language-bash\">./redis-server   启动Redis</span></span><br></pre></td></tr></table></figure>\n\n<p>启动成功后的界面如下：</p>\n<p><img src=\"https://www.runoob.com/wp-content/uploads/2014/11/redis-install1.png\" alt=\"redis-install1\"></p>\n<ul>\n<li><p>查看Redis状态（是否启动，是否使用成功）</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">$ </span><span class=\"language-bash\">redis-cli  该命令会链接本地的Redis服务</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>关闭Redis</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">$ </span><span class=\"language-bash\">redis-cli 进入Redis服务</span></span><br><span class=\"line\"><span class=\"meta prompt_\">$ </span><span class=\"language-bash\">shutdown save｜nosave \t系统会提示保存还是不保存</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<p>关于 save 和 nosave</p>\n<ul>\n<li><strong>SHUTDOWN SAVE</strong>能够在即使没有配置持久化的情况下强制数据库存储.</li>\n<li><strong>SHUTDOWN NOSAVE</strong> 能够在配置一个或者多个持久化策略的情况下阻止数据库存储. (你可以假想它为一个中断服务的 <strong>ABORT</strong> 命令).</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"Redis学习\"><a href=\"#Redis学习\" class=\"headerlink\" title=\"Redis学习\"></a>Redis学习</h3><h4 id=\"1、Redis是什么？\"><a href=\"#1、Redis是什么？\" class=\"headerlink\" title=\"1、Redis是什么？\"></a>1、Redis是什么？</h4><ul>\n<li><p><strong>Redis</strong>的全称是**(REmote DIctionary Server 远程字典服务)**，是一个由Salvatore Sanfilippo写的key-value存储系统。</p>\n</li>\n<li><p>Redis是一个开源的，使用ANSI（C语言标准） C语言编写，遵守BSD（“<em>Berkeley</em> Software Distribution”伯克利软件发行版）协议，支持网络，可基于内存亦可持久化的日志型，Key-Value数据库，并且提供多种语言的API。</p>\n</li>\n<li><p>Redis通常被称为数据结构服务器，因为其可以存储的值（Value）可以是</p>\n<ul>\n<li>String 字符串</li>\n<li>Hash 哈希</li>\n<li>List 列表</li>\n<li>Sets 集合</li>\n<li>Sorted sets 有序集合</li>\n</ul>\n<hr>\n</li>\n</ul>\n<p>相关链接：</p>\n<p>Redis 官网：<a href=\"https://redis.io/\">https://redis.io/</a></p>\n<p>Redis 在线测试：<a href=\"http://try.redis.io/\">http://try.redis.io/</a></p>\n<p>Redis 命令参考：<a href=\"http://doc.redisfans.com/\">http://doc.redisfans.com/</a></p>\n<h4 id=\"2、Redis能做什么？\"><a href=\"#2、Redis能做什么？\" class=\"headerlink\" title=\"2、Redis能做什么？\"></a>2、Redis能做什么？</h4><ol>\n<li><h5 id=\"Redis-与其他-key-value-缓存产品有以下三个特点：\"><a href=\"#Redis-与其他-key-value-缓存产品有以下三个特点：\" class=\"headerlink\" title=\"Redis 与其他 key - value 缓存产品有以下三个特点：\"></a>Redis 与其他 key - value 缓存产品有以下三个特点：</h5></li>\n</ol>\n<ul>\n<li>Redis支持数据的持久化，可以将内存中的数据保存在磁盘中，重启的时候可以再次加载进行使用。</li>\n<li>Redis不仅仅支持简单的 key-value 类型的数据，同时还提供 list，set，zset，hash等数据结构的存储</li>\n<li>Redis支持数据的备份，即master-slave模式的数据备份</li>\n</ul>\n<h4 id=\"3、为什么选择使用Redis？\"><a href=\"#3、为什么选择使用Redis？\" class=\"headerlink\" title=\"3、为什么选择使用Redis？\"></a>3、为什么选择使用Redis？</h4><h5 id=\"关于Redis的优势：\"><a href=\"#关于Redis的优势：\" class=\"headerlink\" title=\"关于Redis的优势：\"></a>关于Redis的优势：</h5><ul>\n<li>性能极高 —— Redis能读的速度是110000次&#x2F;s，写的速度是81000次&#x2F;s。</li>\n<li>丰富的数据类型 —— Redis支持二进制案例的String，Lists，Hashes，Sets 及 Ordered Sets 数据类型操作。</li>\n<li>原子 —— Redis的所有操作系统都是原子性的，意思就是要么成功执行，要么失败完全不执行。单个操作是原子性的。</li>\n<li>丰富的特性  —— Redis还支持 publish&#x2F;subscribe，通知，key过期等等特性。</li>\n</ul>\n<h5 id=\"Redis与其他key-value-存储有什么不同？\"><a href=\"#Redis与其他key-value-存储有什么不同？\" class=\"headerlink\" title=\"Redis与其他key - value 存储有什么不同？\"></a>Redis与其他key - value 存储有什么不同？</h5><ul>\n<li>Redis更为复杂的数据结构并且提供对这些数据结构的原子性操作，这是一个不同于其他数据库的进化路径。Redis的数据类型都是基于基本数据结构的，同时对于程序眼透明，无需进行额外的抽象。</li>\n<li>Redis运行在内存中但是可以持久化到磁盘，所以在对不同数据集进行高速读写时需要权衡内存，因为数据量不能大于硬件内存。在内存数据库方面的另一个优点是，相比在磁盘上相同的复杂数据结构，在内存中操作起来非常简单，这样Redis可以做很多内部复杂性很强的事情。</li>\n</ul>\n<h4 id=\"4、Redis的相关命令\"><a href=\"#4、Redis的相关命令\" class=\"headerlink\" title=\"4、Redis的相关命令\"></a>4、Redis的相关命令</h4><ul>\n<li>启动Redis（需要切换到安装Redis的bin&#x2F;目录下）</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">$ </span><span class=\"language-bash\">./redis-server   启动Redis</span></span><br></pre></td></tr></table></figure>\n\n<p>启动成功后的界面如下：</p>\n<p><img src=\"https://www.runoob.com/wp-content/uploads/2014/11/redis-install1.png\" alt=\"redis-install1\"></p>\n<ul>\n<li><p>查看Redis状态（是否启动，是否使用成功）</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">$ </span><span class=\"language-bash\">redis-cli  该命令会链接本地的Redis服务</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>关闭Redis</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">$ </span><span class=\"language-bash\">redis-cli 进入Redis服务</span></span><br><span class=\"line\"><span class=\"meta prompt_\">$ </span><span class=\"language-bash\">shutdown save｜nosave \t系统会提示保存还是不保存</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<p>关于 save 和 nosave</p>\n<ul>\n<li><strong>SHUTDOWN SAVE</strong>能够在即使没有配置持久化的情况下强制数据库存储.</li>\n<li><strong>SHUTDOWN NOSAVE</strong> 能够在配置一个或者多个持久化策略的情况下阻止数据库存储. (你可以假想它为一个中断服务的 <strong>ABORT</strong> 命令).</li>\n</ul>\n"},{"_content":"### Maven\n\n#### 1、什么是Maven？\n\n  Maven是一个项目管理工具，生成报告（日志文件？）和文档的***Java***项目管理工具，对项目进行构建，依赖管理。（由Apache开发）\n\n  将项目开发和管理过程抽象成一个项目对象模型（POM） ，开发人员只需要做一些简单的配置，就可以批量完成项目的构建，报告和文档的生产工具\n\n<img src=\"/Users/louwenbo/Library/Application Support/typora-user-images/image-20200923124400208.png\" alt=\"image-20200923124400208\" style=\"zoom:50%;\" />\n\n  Alfred在2020年暑期实习期间，做的项目都是基于Maven开发的Web应用（使用SpringMVC开发的Tdogg网上家具商城，Spring Boot开发的Roc鲲鹏航空购票系统）\n\n#### 2、Maven能够做什么？\n\n- ##### Maven能够帮助开发者完成一下工作：\n\n  - 构建\n  - 文档生成\n  - 报告\n  - 依赖\n  - SCMs（?）\n  - 发布\n  - 分发\n  - 邮件列表\n\n- #####  不使用Maven的情景：\n\n  一个开发团队需要做大量的前期准备：\n\n  1. 确定构架\n\n  2. 收集框架相关的jar包\n\n  3. 搭建相应框架（SSH、SSM等）\n\n  4. 编写测试代码\n\n  5. 寻找框架依赖的jar包\n\n  6. 剔除冲突的jar包\n\n  7. 制定相关文档\n\n     ......\n\n  以上内容繁琐，需要做非常充分的准备，一只开发团队每承接一个项目，都需要做这一些繁琐的事情，这些事情耗时耗力，又缺少技术含量。\n\n- ##### Maven登场，发挥作用：\n\n1.   Maven统一集中管理好素有的依赖包，不需要程序员再去寻找\n2. 对应的第三方组件用到的jar，Maven自动解决重复和冲突问题。\n3. Maven作为开放的框架，提供公共接口，方便同第三方插件集成。程序员可以将自己需要的插件，动态的集成到Maven，从而扩展新的管理功能。\n4. Maven可以统一每个项目的构建过程，实现不同项目的兼容性管理\n\n#### 3、Maven的特点\n\n- 项目设置遵循统一的规则。\n- 任意工程中共享。\n- 依赖管理包括自动更新。\n- 一个庞大且不断增长的库。\n- 可扩展，能够轻松编写 Java 或脚本语言的插件。\n- 只需很少或不需要额外配置即可即时访问新功能。\n- **基于模型的构建** − Maven能够将任意数量的项目构建到预定义的输出类型中，如 JAR，WAR 或基于项目元数据的分发，而不需要在大多数情况下执行任何脚本。\n- **项目信息的一致性站点** − 使用与构建过程相同的元数据，Maven 能够生成一个网站或PDF，包括您要添加的任何文档，并添加到关于项目开发状态的标准报告中。\n- **发布管理和发布单独的输出** − Maven 将不需要额外的配置，就可以与源代码管理系统（如 Subversion 或 Git）集成，并可以基于某个标签管理项目的发布。它也可以将其发布到分发位置供其他项目使用。Maven 能够发布单独的输出，如 JAR，包含其他依赖和文档的归档，或者作为源代码发布。\n- **向后兼容性** − 您可以很轻松的从旧版本 Maven 的多个模块移植到 Maven 3 中。\n- 子项目使用父项目依赖时，正常情况子项目应该继承父项目依赖，无需使用版本号，\n- **并行构建** − 编译的速度能普遍提高20 - 50 %。\n- **更好的错误报告** − Maven 改进了错误报告，它为您提供了 Maven wiki 页面的链接，您可以点击链接查看错误的完整描述。\n\n#### 4、POM——Maven工程的基本工作单元\n\n  **POM(Project Object Model , 项目对象模型)**，本质是XML文件，包含了项目的**基本信息，用于描述项目如何构建，声明项目依赖，等等**。\n\n  执行任务或目标时，Maven会在当前目录中查找POM，读取POM，获取所需的配置信息，然后执行目标。\n\n  POM中可以指定一下配置：\n\n- 项目依赖\n- 插件\n- 执行目标\n- 项目构建 profile\n- 项目版本\n- 项目开发者列表\n- 相关邮件列表信息\n\n  在pom.xml中，可以看到Maven在执行目标时需要用到的默认工程源码目录结构，输出目录，需要的插件，仓库和报表目录。\n\n#### 5、Maven构建生命周期\n\n  一个典型的Maven构建（build）生命周期是由以下几个阶段的序列组成的：\n\n![7642256-c967b2c1faeba9ce](https://www.runoob.com/wp-content/uploads/2018/09/7642256-c967b2c1faeba9ce.png)\n\n| 阶段          | 处理     |                           描述                           |\n| :------------ | :------- | :------------------------------------------------------: |\n| 验证 validate | 验证项目 |          验证项目是否正确且所有必须信息是可用的          |\n| 编译 compile  | 执行编译 |                  源代码编译在此阶段完成                  |\n| 测试 Test     | 测试     |      使用适当的单元测试框架（例如JUnit）运行测试。       |\n| 包装 package  | 打包     |         创建JAR/WAR包如在 pom.xml 中定义提及的包         |\n| 检查 verify   | 检查     |         对集成测试的结果进行检查，以保证质量达标         |\n| 安装 install  | 安装     |        安装打包的项目到本地仓库，以供其他项目使用        |\n| 部署 deploy   | 部署     | 拷贝最终的工程包到远程仓库中，以共享给其他开发人员和工程 |\n\n（以上表格采用自“菜鸟教程”）\n\n链接：https://www.runoob.com/maven/maven-build-life-cycle.html\n\n这些阶段将被按顺序地执行。\nMaven有一下三个标准的生命周期：\n\n- **clean：**项目清理的处理\n- **default（或build）：**项目部署的处理\n- **site：**项目站点文档创建的处理\n\n##### Clean生命周期\n\n  当我们执行 \n\n```maven\nmvn post-clean 命令时\n```\n\nMaven调用 clean 生命周期，它包含以下阶段：\n\n- Pre-clean : 执行一些需要在clean之前完成的工作\n- clean：移除所有上一次构建生成的文件\n- post-clean：执行一些需要在clean之后立刻完成的工作\n\n\n\n","source":"_posts/Maven学习.md","raw":"### Maven\n\n#### 1、什么是Maven？\n\n  Maven是一个项目管理工具，生成报告（日志文件？）和文档的***Java***项目管理工具，对项目进行构建，依赖管理。（由Apache开发）\n\n  将项目开发和管理过程抽象成一个项目对象模型（POM） ，开发人员只需要做一些简单的配置，就可以批量完成项目的构建，报告和文档的生产工具\n\n<img src=\"/Users/louwenbo/Library/Application Support/typora-user-images/image-20200923124400208.png\" alt=\"image-20200923124400208\" style=\"zoom:50%;\" />\n\n  Alfred在2020年暑期实习期间，做的项目都是基于Maven开发的Web应用（使用SpringMVC开发的Tdogg网上家具商城，Spring Boot开发的Roc鲲鹏航空购票系统）\n\n#### 2、Maven能够做什么？\n\n- ##### Maven能够帮助开发者完成一下工作：\n\n  - 构建\n  - 文档生成\n  - 报告\n  - 依赖\n  - SCMs（?）\n  - 发布\n  - 分发\n  - 邮件列表\n\n- #####  不使用Maven的情景：\n\n  一个开发团队需要做大量的前期准备：\n\n  1. 确定构架\n\n  2. 收集框架相关的jar包\n\n  3. 搭建相应框架（SSH、SSM等）\n\n  4. 编写测试代码\n\n  5. 寻找框架依赖的jar包\n\n  6. 剔除冲突的jar包\n\n  7. 制定相关文档\n\n     ......\n\n  以上内容繁琐，需要做非常充分的准备，一只开发团队每承接一个项目，都需要做这一些繁琐的事情，这些事情耗时耗力，又缺少技术含量。\n\n- ##### Maven登场，发挥作用：\n\n1.   Maven统一集中管理好素有的依赖包，不需要程序员再去寻找\n2. 对应的第三方组件用到的jar，Maven自动解决重复和冲突问题。\n3. Maven作为开放的框架，提供公共接口，方便同第三方插件集成。程序员可以将自己需要的插件，动态的集成到Maven，从而扩展新的管理功能。\n4. Maven可以统一每个项目的构建过程，实现不同项目的兼容性管理\n\n#### 3、Maven的特点\n\n- 项目设置遵循统一的规则。\n- 任意工程中共享。\n- 依赖管理包括自动更新。\n- 一个庞大且不断增长的库。\n- 可扩展，能够轻松编写 Java 或脚本语言的插件。\n- 只需很少或不需要额外配置即可即时访问新功能。\n- **基于模型的构建** − Maven能够将任意数量的项目构建到预定义的输出类型中，如 JAR，WAR 或基于项目元数据的分发，而不需要在大多数情况下执行任何脚本。\n- **项目信息的一致性站点** − 使用与构建过程相同的元数据，Maven 能够生成一个网站或PDF，包括您要添加的任何文档，并添加到关于项目开发状态的标准报告中。\n- **发布管理和发布单独的输出** − Maven 将不需要额外的配置，就可以与源代码管理系统（如 Subversion 或 Git）集成，并可以基于某个标签管理项目的发布。它也可以将其发布到分发位置供其他项目使用。Maven 能够发布单独的输出，如 JAR，包含其他依赖和文档的归档，或者作为源代码发布。\n- **向后兼容性** − 您可以很轻松的从旧版本 Maven 的多个模块移植到 Maven 3 中。\n- 子项目使用父项目依赖时，正常情况子项目应该继承父项目依赖，无需使用版本号，\n- **并行构建** − 编译的速度能普遍提高20 - 50 %。\n- **更好的错误报告** − Maven 改进了错误报告，它为您提供了 Maven wiki 页面的链接，您可以点击链接查看错误的完整描述。\n\n#### 4、POM——Maven工程的基本工作单元\n\n  **POM(Project Object Model , 项目对象模型)**，本质是XML文件，包含了项目的**基本信息，用于描述项目如何构建，声明项目依赖，等等**。\n\n  执行任务或目标时，Maven会在当前目录中查找POM，读取POM，获取所需的配置信息，然后执行目标。\n\n  POM中可以指定一下配置：\n\n- 项目依赖\n- 插件\n- 执行目标\n- 项目构建 profile\n- 项目版本\n- 项目开发者列表\n- 相关邮件列表信息\n\n  在pom.xml中，可以看到Maven在执行目标时需要用到的默认工程源码目录结构，输出目录，需要的插件，仓库和报表目录。\n\n#### 5、Maven构建生命周期\n\n  一个典型的Maven构建（build）生命周期是由以下几个阶段的序列组成的：\n\n![7642256-c967b2c1faeba9ce](https://www.runoob.com/wp-content/uploads/2018/09/7642256-c967b2c1faeba9ce.png)\n\n| 阶段          | 处理     |                           描述                           |\n| :------------ | :------- | :------------------------------------------------------: |\n| 验证 validate | 验证项目 |          验证项目是否正确且所有必须信息是可用的          |\n| 编译 compile  | 执行编译 |                  源代码编译在此阶段完成                  |\n| 测试 Test     | 测试     |      使用适当的单元测试框架（例如JUnit）运行测试。       |\n| 包装 package  | 打包     |         创建JAR/WAR包如在 pom.xml 中定义提及的包         |\n| 检查 verify   | 检查     |         对集成测试的结果进行检查，以保证质量达标         |\n| 安装 install  | 安装     |        安装打包的项目到本地仓库，以供其他项目使用        |\n| 部署 deploy   | 部署     | 拷贝最终的工程包到远程仓库中，以共享给其他开发人员和工程 |\n\n（以上表格采用自“菜鸟教程”）\n\n链接：https://www.runoob.com/maven/maven-build-life-cycle.html\n\n这些阶段将被按顺序地执行。\nMaven有一下三个标准的生命周期：\n\n- **clean：**项目清理的处理\n- **default（或build）：**项目部署的处理\n- **site：**项目站点文档创建的处理\n\n##### Clean生命周期\n\n  当我们执行 \n\n```maven\nmvn post-clean 命令时\n```\n\nMaven调用 clean 生命周期，它包含以下阶段：\n\n- Pre-clean : 执行一些需要在clean之前完成的工作\n- clean：移除所有上一次构建生成的文件\n- post-clean：执行一些需要在clean之后立刻完成的工作\n\n\n\n","slug":"Maven学习","published":1,"date":"2020-09-23T04:16:55.991Z","updated":"2020-09-27T13:40:30.940Z","title":"","comments":1,"layout":"post","photos":[],"link":"","_id":"cldnbidhv0002u99k4ziihk5j","content":"<h3 id=\"Maven\"><a href=\"#Maven\" class=\"headerlink\" title=\"Maven\"></a>Maven</h3><h4 id=\"1、什么是Maven？\"><a href=\"#1、什么是Maven？\" class=\"headerlink\" title=\"1、什么是Maven？\"></a>1、什么是Maven？</h4><p>  Maven是一个项目管理工具，生成报告（日志文件？）和文档的<em><strong>Java</strong></em>项目管理工具，对项目进行构建，依赖管理。（由Apache开发）</p>\n<p>  将项目开发和管理过程抽象成一个项目对象模型（POM） ，开发人员只需要做一些简单的配置，就可以批量完成项目的构建，报告和文档的生产工具</p>\n<img src=\"/Users/louwenbo/Library/Application Support/typora-user-images/image-20200923124400208.png\" alt=\"image-20200923124400208\" style=\"zoom:50%;\" />\n\n<p>  Alfred在2020年暑期实习期间，做的项目都是基于Maven开发的Web应用（使用SpringMVC开发的Tdogg网上家具商城，Spring Boot开发的Roc鲲鹏航空购票系统）</p>\n<h4 id=\"2、Maven能够做什么？\"><a href=\"#2、Maven能够做什么？\" class=\"headerlink\" title=\"2、Maven能够做什么？\"></a>2、Maven能够做什么？</h4><ul>\n<li><h5 id=\"Maven能够帮助开发者完成一下工作：\"><a href=\"#Maven能够帮助开发者完成一下工作：\" class=\"headerlink\" title=\"Maven能够帮助开发者完成一下工作：\"></a>Maven能够帮助开发者完成一下工作：</h5><ul>\n<li>构建</li>\n<li>文档生成</li>\n<li>报告</li>\n<li>依赖</li>\n<li>SCMs（?）</li>\n<li>发布</li>\n<li>分发</li>\n<li>邮件列表</li>\n</ul>\n</li>\n<li><h5 id=\"不使用Maven的情景：\"><a href=\"#不使用Maven的情景：\" class=\"headerlink\" title=\"不使用Maven的情景：\"></a>不使用Maven的情景：</h5><p>一个开发团队需要做大量的前期准备：</p>\n<ol>\n<li><p>确定构架</p>\n</li>\n<li><p>收集框架相关的jar包</p>\n</li>\n<li><p>搭建相应框架（SSH、SSM等）</p>\n</li>\n<li><p>编写测试代码</p>\n</li>\n<li><p>寻找框架依赖的jar包</p>\n</li>\n<li><p>剔除冲突的jar包</p>\n</li>\n<li><p>制定相关文档</p>\n<p>……</p>\n</li>\n</ol>\n<p>以上内容繁琐，需要做非常充分的准备，一只开发团队每承接一个项目，都需要做这一些繁琐的事情，这些事情耗时耗力，又缺少技术含量。</p>\n</li>\n<li><h5 id=\"Maven登场，发挥作用：\"><a href=\"#Maven登场，发挥作用：\" class=\"headerlink\" title=\"Maven登场，发挥作用：\"></a>Maven登场，发挥作用：</h5></li>\n</ul>\n<ol>\n<li>Maven统一集中管理好素有的依赖包，不需要程序员再去寻找</li>\n<li>对应的第三方组件用到的jar，Maven自动解决重复和冲突问题。</li>\n<li>Maven作为开放的框架，提供公共接口，方便同第三方插件集成。程序员可以将自己需要的插件，动态的集成到Maven，从而扩展新的管理功能。</li>\n<li>Maven可以统一每个项目的构建过程，实现不同项目的兼容性管理</li>\n</ol>\n<h4 id=\"3、Maven的特点\"><a href=\"#3、Maven的特点\" class=\"headerlink\" title=\"3、Maven的特点\"></a>3、Maven的特点</h4><ul>\n<li>项目设置遵循统一的规则。</li>\n<li>任意工程中共享。</li>\n<li>依赖管理包括自动更新。</li>\n<li>一个庞大且不断增长的库。</li>\n<li>可扩展，能够轻松编写 Java 或脚本语言的插件。</li>\n<li>只需很少或不需要额外配置即可即时访问新功能。</li>\n<li><strong>基于模型的构建</strong> − Maven能够将任意数量的项目构建到预定义的输出类型中，如 JAR，WAR 或基于项目元数据的分发，而不需要在大多数情况下执行任何脚本。</li>\n<li><strong>项目信息的一致性站点</strong> − 使用与构建过程相同的元数据，Maven 能够生成一个网站或PDF，包括您要添加的任何文档，并添加到关于项目开发状态的标准报告中。</li>\n<li><strong>发布管理和发布单独的输出</strong> − Maven 将不需要额外的配置，就可以与源代码管理系统（如 Subversion 或 Git）集成，并可以基于某个标签管理项目的发布。它也可以将其发布到分发位置供其他项目使用。Maven 能够发布单独的输出，如 JAR，包含其他依赖和文档的归档，或者作为源代码发布。</li>\n<li><strong>向后兼容性</strong> − 您可以很轻松的从旧版本 Maven 的多个模块移植到 Maven 3 中。</li>\n<li>子项目使用父项目依赖时，正常情况子项目应该继承父项目依赖，无需使用版本号，</li>\n<li><strong>并行构建</strong> − 编译的速度能普遍提高20 - 50 %。</li>\n<li><strong>更好的错误报告</strong> − Maven 改进了错误报告，它为您提供了 Maven wiki 页面的链接，您可以点击链接查看错误的完整描述。</li>\n</ul>\n<h4 id=\"4、POM——Maven工程的基本工作单元\"><a href=\"#4、POM——Maven工程的基本工作单元\" class=\"headerlink\" title=\"4、POM——Maven工程的基本工作单元\"></a>4、POM——Maven工程的基本工作单元</h4><p>  <strong>POM(Project Object Model , 项目对象模型)<strong>，本质是XML文件，包含了项目的</strong>基本信息，用于描述项目如何构建，声明项目依赖，等等</strong>。</p>\n<p>  执行任务或目标时，Maven会在当前目录中查找POM，读取POM，获取所需的配置信息，然后执行目标。</p>\n<p>  POM中可以指定一下配置：</p>\n<ul>\n<li><p>项目依赖</p>\n</li>\n<li><p>插件</p>\n</li>\n<li><p>执行目标</p>\n</li>\n<li><p>项目构建 profile</p>\n</li>\n<li><p>项目版本</p>\n</li>\n<li><p>项目开发者列表</p>\n</li>\n<li><p>相关邮件列表信息</p>\n<p>在pom.xml中，可以看到Maven在执行目标时需要用到的默认工程源码目录结构，输出目录，需要的插件，仓库和报表目录。</p>\n</li>\n</ul>\n<h4 id=\"5、Maven构建生命周期\"><a href=\"#5、Maven构建生命周期\" class=\"headerlink\" title=\"5、Maven构建生命周期\"></a>5、Maven构建生命周期</h4><p>  一个典型的Maven构建（build）生命周期是由以下几个阶段的序列组成的：</p>\n<p><img src=\"https://www.runoob.com/wp-content/uploads/2018/09/7642256-c967b2c1faeba9ce.png\" alt=\"7642256-c967b2c1faeba9ce\"></p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">阶段</th>\n<th align=\"left\">处理</th>\n<th align=\"center\">描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">验证 validate</td>\n<td align=\"left\">验证项目</td>\n<td align=\"center\">验证项目是否正确且所有必须信息是可用的</td>\n</tr>\n<tr>\n<td align=\"left\">编译 compile</td>\n<td align=\"left\">执行编译</td>\n<td align=\"center\">源代码编译在此阶段完成</td>\n</tr>\n<tr>\n<td align=\"left\">测试 Test</td>\n<td align=\"left\">测试</td>\n<td align=\"center\">使用适当的单元测试框架（例如JUnit）运行测试。</td>\n</tr>\n<tr>\n<td align=\"left\">包装 package</td>\n<td align=\"left\">打包</td>\n<td align=\"center\">创建JAR&#x2F;WAR包如在 pom.xml 中定义提及的包</td>\n</tr>\n<tr>\n<td align=\"left\">检查 verify</td>\n<td align=\"left\">检查</td>\n<td align=\"center\">对集成测试的结果进行检查，以保证质量达标</td>\n</tr>\n<tr>\n<td align=\"left\">安装 install</td>\n<td align=\"left\">安装</td>\n<td align=\"center\">安装打包的项目到本地仓库，以供其他项目使用</td>\n</tr>\n<tr>\n<td align=\"left\">部署 deploy</td>\n<td align=\"left\">部署</td>\n<td align=\"center\">拷贝最终的工程包到远程仓库中，以共享给其他开发人员和工程</td>\n</tr>\n</tbody></table>\n<p>（以上表格采用自“菜鸟教程”）</p>\n<p>链接：<a href=\"https://www.runoob.com/maven/maven-build-life-cycle.html\">https://www.runoob.com/maven/maven-build-life-cycle.html</a></p>\n<p>这些阶段将被按顺序地执行。<br>Maven有一下三个标准的生命周期：</p>\n<ul>\n<li><strong>clean：</strong>项目清理的处理</li>\n<li><strong>default（或build）：</strong>项目部署的处理</li>\n<li><strong>site：</strong>项目站点文档创建的处理</li>\n</ul>\n<h5 id=\"Clean生命周期\"><a href=\"#Clean生命周期\" class=\"headerlink\" title=\"Clean生命周期\"></a>Clean生命周期</h5><p>  当我们执行 </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mvn post-clean 命令时</span><br></pre></td></tr></table></figure>\n\n<p>Maven调用 clean 生命周期，它包含以下阶段：</p>\n<ul>\n<li>Pre-clean : 执行一些需要在clean之前完成的工作</li>\n<li>clean：移除所有上一次构建生成的文件</li>\n<li>post-clean：执行一些需要在clean之后立刻完成的工作</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"Maven\"><a href=\"#Maven\" class=\"headerlink\" title=\"Maven\"></a>Maven</h3><h4 id=\"1、什么是Maven？\"><a href=\"#1、什么是Maven？\" class=\"headerlink\" title=\"1、什么是Maven？\"></a>1、什么是Maven？</h4><p>  Maven是一个项目管理工具，生成报告（日志文件？）和文档的<em><strong>Java</strong></em>项目管理工具，对项目进行构建，依赖管理。（由Apache开发）</p>\n<p>  将项目开发和管理过程抽象成一个项目对象模型（POM） ，开发人员只需要做一些简单的配置，就可以批量完成项目的构建，报告和文档的生产工具</p>\n<img src=\"/Users/louwenbo/Library/Application Support/typora-user-images/image-20200923124400208.png\" alt=\"image-20200923124400208\" style=\"zoom:50%;\" />\n\n<p>  Alfred在2020年暑期实习期间，做的项目都是基于Maven开发的Web应用（使用SpringMVC开发的Tdogg网上家具商城，Spring Boot开发的Roc鲲鹏航空购票系统）</p>\n<h4 id=\"2、Maven能够做什么？\"><a href=\"#2、Maven能够做什么？\" class=\"headerlink\" title=\"2、Maven能够做什么？\"></a>2、Maven能够做什么？</h4><ul>\n<li><h5 id=\"Maven能够帮助开发者完成一下工作：\"><a href=\"#Maven能够帮助开发者完成一下工作：\" class=\"headerlink\" title=\"Maven能够帮助开发者完成一下工作：\"></a>Maven能够帮助开发者完成一下工作：</h5><ul>\n<li>构建</li>\n<li>文档生成</li>\n<li>报告</li>\n<li>依赖</li>\n<li>SCMs（?）</li>\n<li>发布</li>\n<li>分发</li>\n<li>邮件列表</li>\n</ul>\n</li>\n<li><h5 id=\"不使用Maven的情景：\"><a href=\"#不使用Maven的情景：\" class=\"headerlink\" title=\"不使用Maven的情景：\"></a>不使用Maven的情景：</h5><p>一个开发团队需要做大量的前期准备：</p>\n<ol>\n<li><p>确定构架</p>\n</li>\n<li><p>收集框架相关的jar包</p>\n</li>\n<li><p>搭建相应框架（SSH、SSM等）</p>\n</li>\n<li><p>编写测试代码</p>\n</li>\n<li><p>寻找框架依赖的jar包</p>\n</li>\n<li><p>剔除冲突的jar包</p>\n</li>\n<li><p>制定相关文档</p>\n<p>……</p>\n</li>\n</ol>\n<p>以上内容繁琐，需要做非常充分的准备，一只开发团队每承接一个项目，都需要做这一些繁琐的事情，这些事情耗时耗力，又缺少技术含量。</p>\n</li>\n<li><h5 id=\"Maven登场，发挥作用：\"><a href=\"#Maven登场，发挥作用：\" class=\"headerlink\" title=\"Maven登场，发挥作用：\"></a>Maven登场，发挥作用：</h5></li>\n</ul>\n<ol>\n<li>Maven统一集中管理好素有的依赖包，不需要程序员再去寻找</li>\n<li>对应的第三方组件用到的jar，Maven自动解决重复和冲突问题。</li>\n<li>Maven作为开放的框架，提供公共接口，方便同第三方插件集成。程序员可以将自己需要的插件，动态的集成到Maven，从而扩展新的管理功能。</li>\n<li>Maven可以统一每个项目的构建过程，实现不同项目的兼容性管理</li>\n</ol>\n<h4 id=\"3、Maven的特点\"><a href=\"#3、Maven的特点\" class=\"headerlink\" title=\"3、Maven的特点\"></a>3、Maven的特点</h4><ul>\n<li>项目设置遵循统一的规则。</li>\n<li>任意工程中共享。</li>\n<li>依赖管理包括自动更新。</li>\n<li>一个庞大且不断增长的库。</li>\n<li>可扩展，能够轻松编写 Java 或脚本语言的插件。</li>\n<li>只需很少或不需要额外配置即可即时访问新功能。</li>\n<li><strong>基于模型的构建</strong> − Maven能够将任意数量的项目构建到预定义的输出类型中，如 JAR，WAR 或基于项目元数据的分发，而不需要在大多数情况下执行任何脚本。</li>\n<li><strong>项目信息的一致性站点</strong> − 使用与构建过程相同的元数据，Maven 能够生成一个网站或PDF，包括您要添加的任何文档，并添加到关于项目开发状态的标准报告中。</li>\n<li><strong>发布管理和发布单独的输出</strong> − Maven 将不需要额外的配置，就可以与源代码管理系统（如 Subversion 或 Git）集成，并可以基于某个标签管理项目的发布。它也可以将其发布到分发位置供其他项目使用。Maven 能够发布单独的输出，如 JAR，包含其他依赖和文档的归档，或者作为源代码发布。</li>\n<li><strong>向后兼容性</strong> − 您可以很轻松的从旧版本 Maven 的多个模块移植到 Maven 3 中。</li>\n<li>子项目使用父项目依赖时，正常情况子项目应该继承父项目依赖，无需使用版本号，</li>\n<li><strong>并行构建</strong> − 编译的速度能普遍提高20 - 50 %。</li>\n<li><strong>更好的错误报告</strong> − Maven 改进了错误报告，它为您提供了 Maven wiki 页面的链接，您可以点击链接查看错误的完整描述。</li>\n</ul>\n<h4 id=\"4、POM——Maven工程的基本工作单元\"><a href=\"#4、POM——Maven工程的基本工作单元\" class=\"headerlink\" title=\"4、POM——Maven工程的基本工作单元\"></a>4、POM——Maven工程的基本工作单元</h4><p>  <strong>POM(Project Object Model , 项目对象模型)<strong>，本质是XML文件，包含了项目的</strong>基本信息，用于描述项目如何构建，声明项目依赖，等等</strong>。</p>\n<p>  执行任务或目标时，Maven会在当前目录中查找POM，读取POM，获取所需的配置信息，然后执行目标。</p>\n<p>  POM中可以指定一下配置：</p>\n<ul>\n<li><p>项目依赖</p>\n</li>\n<li><p>插件</p>\n</li>\n<li><p>执行目标</p>\n</li>\n<li><p>项目构建 profile</p>\n</li>\n<li><p>项目版本</p>\n</li>\n<li><p>项目开发者列表</p>\n</li>\n<li><p>相关邮件列表信息</p>\n<p>在pom.xml中，可以看到Maven在执行目标时需要用到的默认工程源码目录结构，输出目录，需要的插件，仓库和报表目录。</p>\n</li>\n</ul>\n<h4 id=\"5、Maven构建生命周期\"><a href=\"#5、Maven构建生命周期\" class=\"headerlink\" title=\"5、Maven构建生命周期\"></a>5、Maven构建生命周期</h4><p>  一个典型的Maven构建（build）生命周期是由以下几个阶段的序列组成的：</p>\n<p><img src=\"https://www.runoob.com/wp-content/uploads/2018/09/7642256-c967b2c1faeba9ce.png\" alt=\"7642256-c967b2c1faeba9ce\"></p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">阶段</th>\n<th align=\"left\">处理</th>\n<th align=\"center\">描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">验证 validate</td>\n<td align=\"left\">验证项目</td>\n<td align=\"center\">验证项目是否正确且所有必须信息是可用的</td>\n</tr>\n<tr>\n<td align=\"left\">编译 compile</td>\n<td align=\"left\">执行编译</td>\n<td align=\"center\">源代码编译在此阶段完成</td>\n</tr>\n<tr>\n<td align=\"left\">测试 Test</td>\n<td align=\"left\">测试</td>\n<td align=\"center\">使用适当的单元测试框架（例如JUnit）运行测试。</td>\n</tr>\n<tr>\n<td align=\"left\">包装 package</td>\n<td align=\"left\">打包</td>\n<td align=\"center\">创建JAR&#x2F;WAR包如在 pom.xml 中定义提及的包</td>\n</tr>\n<tr>\n<td align=\"left\">检查 verify</td>\n<td align=\"left\">检查</td>\n<td align=\"center\">对集成测试的结果进行检查，以保证质量达标</td>\n</tr>\n<tr>\n<td align=\"left\">安装 install</td>\n<td align=\"left\">安装</td>\n<td align=\"center\">安装打包的项目到本地仓库，以供其他项目使用</td>\n</tr>\n<tr>\n<td align=\"left\">部署 deploy</td>\n<td align=\"left\">部署</td>\n<td align=\"center\">拷贝最终的工程包到远程仓库中，以共享给其他开发人员和工程</td>\n</tr>\n</tbody></table>\n<p>（以上表格采用自“菜鸟教程”）</p>\n<p>链接：<a href=\"https://www.runoob.com/maven/maven-build-life-cycle.html\">https://www.runoob.com/maven/maven-build-life-cycle.html</a></p>\n<p>这些阶段将被按顺序地执行。<br>Maven有一下三个标准的生命周期：</p>\n<ul>\n<li><strong>clean：</strong>项目清理的处理</li>\n<li><strong>default（或build）：</strong>项目部署的处理</li>\n<li><strong>site：</strong>项目站点文档创建的处理</li>\n</ul>\n<h5 id=\"Clean生命周期\"><a href=\"#Clean生命周期\" class=\"headerlink\" title=\"Clean生命周期\"></a>Clean生命周期</h5><p>  当我们执行 </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mvn post-clean 命令时</span><br></pre></td></tr></table></figure>\n\n<p>Maven调用 clean 生命周期，它包含以下阶段：</p>\n<ul>\n<li>Pre-clean : 执行一些需要在clean之前完成的工作</li>\n<li>clean：移除所有上一次构建生成的文件</li>\n<li>post-clean：执行一些需要在clean之后立刻完成的工作</li>\n</ul>\n"},{"_content":"### 1、Spring\n\n------\n\n##### 1.1、简介(用于面试)\n\n- 2002年首次推出了Spring框架的雏形\n- “不要重复发明轮子（Don't Reinvent Wheel）”,意思是企业中任何一项工作实际上都有人做过，软件领域中有的功能或者是项目，别人已经做过，我们需要用的时候，直接拿来用即可，而不需要重新创造。可以很好的来解释Spring框架。\n- Spring保持强大的向后兼容性。\n- 解决企业应用开发的复杂性\n- Spring是一个轻量级控制反转（IoC）和面向切面（AOP）的容器框架\n- Spring的理念：使现有的技术更加容易使用\n- SSH（Struct2 + Spring + Hibernate）\n- SSM(Spring + SpringMVC + Mybatis)\n\n##### 1.2、优点、缺点\n\n1. 优点\n\n- 开源免费框架（容器）\n\n- 轻量级，<u>非侵入式的框架</u>\n- <u>控制反转（IoC），面向切面编程（AOP）</u>\n\n2. 缺点\n\n- 发展太久之后，违背了原来的理念，配置非常繁琐。（很多同学都在Spring的配置文件上劝退了）\n\n##### 1.3、组成\n\n![image-20200909231721960](/Users/louwenbo/Desktop/image-20200909231721960.png)\n\n##### 1.4、拓展\n\n<img src=\"/Users/louwenbo/Desktop/image-20200909220617974.png\" alt=\"image-20200909220617974\" style=\"zoom: 50%;\" />\n\n- Spring Boot\n  - 一个快速开发的脚手架\n  - 基于SpringBoot可以快速的开发单个微服务\n  - 约定大于配置（COC）\n- Spring Cloud\n  - SpringCloud是基于SpringBoot实现的\n\n目前很多大公司都在使用SpringBoot进行快速开发，学习SpringBoot的前提，需要完全掌握Spring及SpringMVC\n\n### 2、IoC理论推导\n\n1. UserDao接口\n2. UserDaoImpl实现类\n3. UserService业务接口\n4. UserServiceImpl业务员实现类\n\n- 在之前所学习的编程里（例如 JavaSE），用户的需求可能会影响我们原来的代码，我们需要根据用户的需求去修改源代码，如果程序代码量十分大，修改一次的成本代价十分昂贵。\n\n  - 例如在2020年1-4月份期间自己独立开发（Visual Basic）的排版系统，编写的变量，常量非常多，如果遇到一些特殊的需求（因为疫情会改变排版的基本需求），程序不能满足的话，需要回到源代码的层面上去更改数据，难免是麻烦的，甚至在一些设计不周的情况下出现意想不到的bug。\n\n    <img src=\"/Users/louwenbo/Desktop/image-20200909223653923.png\" alt=\"image-20200909223653923\" style=\"zoom: 50%;\" />\n\n- 之前，程序是主动创建对象，控制权在程序员手上\n- 使用了一些方法（例如Set注入），程序不再具有主动性，而是变成了被动的接受对象\n\n这种思想，从本质上解决了问题，<u>程序员不用再去管理对象的创建了。系统的耦合性大大降低，可以使开发更加注重在业务的实现上</u>，这是IoC的原型。\n\n### 3、IoC本质\n\n-   **控制反转IoC（Inversion of Control）,是一种设计思想，DI依赖注入（Dependence Injection）是实现IoC的方法。**在没有IoC的程序中，我们使用面向对象编程，对象的创建与对象间的依赖关系完全硬编码在程序中，对象的创建由程序自己控制，控制反转后将对象的创建转移给第三方。\n-   **IoC是Spring框架的核心内容**，使用多种方式完美的实现了IoC，可以使用XML配置，也可以使用注解，新版本的Spring也可以零配置实现IoC。\n-   采用XML方式配置Bean的时候，Bean的定义信息是和现实分离的，而采用注解的方式可以把两者合为一体，Bean的定义信息直接以注解的形式定义在实现类中，从而达到了零配置的目的。\n\n\n\n\n\n\n\n\n\n\n\n","source":"_posts/Spring学习.md","raw":"### 1、Spring\n\n------\n\n##### 1.1、简介(用于面试)\n\n- 2002年首次推出了Spring框架的雏形\n- “不要重复发明轮子（Don't Reinvent Wheel）”,意思是企业中任何一项工作实际上都有人做过，软件领域中有的功能或者是项目，别人已经做过，我们需要用的时候，直接拿来用即可，而不需要重新创造。可以很好的来解释Spring框架。\n- Spring保持强大的向后兼容性。\n- 解决企业应用开发的复杂性\n- Spring是一个轻量级控制反转（IoC）和面向切面（AOP）的容器框架\n- Spring的理念：使现有的技术更加容易使用\n- SSH（Struct2 + Spring + Hibernate）\n- SSM(Spring + SpringMVC + Mybatis)\n\n##### 1.2、优点、缺点\n\n1. 优点\n\n- 开源免费框架（容器）\n\n- 轻量级，<u>非侵入式的框架</u>\n- <u>控制反转（IoC），面向切面编程（AOP）</u>\n\n2. 缺点\n\n- 发展太久之后，违背了原来的理念，配置非常繁琐。（很多同学都在Spring的配置文件上劝退了）\n\n##### 1.3、组成\n\n![image-20200909231721960](/Users/louwenbo/Desktop/image-20200909231721960.png)\n\n##### 1.4、拓展\n\n<img src=\"/Users/louwenbo/Desktop/image-20200909220617974.png\" alt=\"image-20200909220617974\" style=\"zoom: 50%;\" />\n\n- Spring Boot\n  - 一个快速开发的脚手架\n  - 基于SpringBoot可以快速的开发单个微服务\n  - 约定大于配置（COC）\n- Spring Cloud\n  - SpringCloud是基于SpringBoot实现的\n\n目前很多大公司都在使用SpringBoot进行快速开发，学习SpringBoot的前提，需要完全掌握Spring及SpringMVC\n\n### 2、IoC理论推导\n\n1. UserDao接口\n2. UserDaoImpl实现类\n3. UserService业务接口\n4. UserServiceImpl业务员实现类\n\n- 在之前所学习的编程里（例如 JavaSE），用户的需求可能会影响我们原来的代码，我们需要根据用户的需求去修改源代码，如果程序代码量十分大，修改一次的成本代价十分昂贵。\n\n  - 例如在2020年1-4月份期间自己独立开发（Visual Basic）的排版系统，编写的变量，常量非常多，如果遇到一些特殊的需求（因为疫情会改变排版的基本需求），程序不能满足的话，需要回到源代码的层面上去更改数据，难免是麻烦的，甚至在一些设计不周的情况下出现意想不到的bug。\n\n    <img src=\"/Users/louwenbo/Desktop/image-20200909223653923.png\" alt=\"image-20200909223653923\" style=\"zoom: 50%;\" />\n\n- 之前，程序是主动创建对象，控制权在程序员手上\n- 使用了一些方法（例如Set注入），程序不再具有主动性，而是变成了被动的接受对象\n\n这种思想，从本质上解决了问题，<u>程序员不用再去管理对象的创建了。系统的耦合性大大降低，可以使开发更加注重在业务的实现上</u>，这是IoC的原型。\n\n### 3、IoC本质\n\n-   **控制反转IoC（Inversion of Control）,是一种设计思想，DI依赖注入（Dependence Injection）是实现IoC的方法。**在没有IoC的程序中，我们使用面向对象编程，对象的创建与对象间的依赖关系完全硬编码在程序中，对象的创建由程序自己控制，控制反转后将对象的创建转移给第三方。\n-   **IoC是Spring框架的核心内容**，使用多种方式完美的实现了IoC，可以使用XML配置，也可以使用注解，新版本的Spring也可以零配置实现IoC。\n-   采用XML方式配置Bean的时候，Bean的定义信息是和现实分离的，而采用注解的方式可以把两者合为一体，Bean的定义信息直接以注解的形式定义在实现类中，从而达到了零配置的目的。\n\n\n\n\n\n\n\n\n\n\n\n","slug":"Spring学习","published":1,"date":"2020-09-09T14:00:10.995Z","updated":"2020-09-14T12:54:56.581Z","title":"","comments":1,"layout":"post","photos":[],"link":"","_id":"cldnbidhw0003u99kfvky3xo0","content":"<h3 id=\"1、Spring\"><a href=\"#1、Spring\" class=\"headerlink\" title=\"1、Spring\"></a>1、Spring</h3><hr>\n<h5 id=\"1-1、简介-用于面试\"><a href=\"#1-1、简介-用于面试\" class=\"headerlink\" title=\"1.1、简介(用于面试)\"></a>1.1、简介(用于面试)</h5><ul>\n<li>2002年首次推出了Spring框架的雏形</li>\n<li>“不要重复发明轮子（Don’t Reinvent Wheel）”,意思是企业中任何一项工作实际上都有人做过，软件领域中有的功能或者是项目，别人已经做过，我们需要用的时候，直接拿来用即可，而不需要重新创造。可以很好的来解释Spring框架。</li>\n<li>Spring保持强大的向后兼容性。</li>\n<li>解决企业应用开发的复杂性</li>\n<li>Spring是一个轻量级控制反转（IoC）和面向切面（AOP）的容器框架</li>\n<li>Spring的理念：使现有的技术更加容易使用</li>\n<li>SSH（Struct2 + Spring + Hibernate）</li>\n<li>SSM(Spring + SpringMVC + Mybatis)</li>\n</ul>\n<h5 id=\"1-2、优点、缺点\"><a href=\"#1-2、优点、缺点\" class=\"headerlink\" title=\"1.2、优点、缺点\"></a>1.2、优点、缺点</h5><ol>\n<li>优点</li>\n</ol>\n<ul>\n<li><p>开源免费框架（容器）</p>\n</li>\n<li><p>轻量级，<u>非侵入式的框架</u></p>\n</li>\n<li><p><u>控制反转（IoC），面向切面编程（AOP）</u></p>\n</li>\n</ul>\n<ol start=\"2\">\n<li>缺点</li>\n</ol>\n<ul>\n<li>发展太久之后，违背了原来的理念，配置非常繁琐。（很多同学都在Spring的配置文件上劝退了）</li>\n</ul>\n<h5 id=\"1-3、组成\"><a href=\"#1-3、组成\" class=\"headerlink\" title=\"1.3、组成\"></a>1.3、组成</h5><p><img src=\"/Users/louwenbo/Desktop/image-20200909231721960.png\" alt=\"image-20200909231721960\"></p>\n<h5 id=\"1-4、拓展\"><a href=\"#1-4、拓展\" class=\"headerlink\" title=\"1.4、拓展\"></a>1.4、拓展</h5><img src=\"/Users/louwenbo/Desktop/image-20200909220617974.png\" alt=\"image-20200909220617974\" style=\"zoom: 50%;\" />\n\n<ul>\n<li>Spring Boot<ul>\n<li>一个快速开发的脚手架</li>\n<li>基于SpringBoot可以快速的开发单个微服务</li>\n<li>约定大于配置（COC）</li>\n</ul>\n</li>\n<li>Spring Cloud<ul>\n<li>SpringCloud是基于SpringBoot实现的</li>\n</ul>\n</li>\n</ul>\n<p>目前很多大公司都在使用SpringBoot进行快速开发，学习SpringBoot的前提，需要完全掌握Spring及SpringMVC</p>\n<h3 id=\"2、IoC理论推导\"><a href=\"#2、IoC理论推导\" class=\"headerlink\" title=\"2、IoC理论推导\"></a>2、IoC理论推导</h3><ol>\n<li>UserDao接口</li>\n<li>UserDaoImpl实现类</li>\n<li>UserService业务接口</li>\n<li>UserServiceImpl业务员实现类</li>\n</ol>\n<ul>\n<li><p>在之前所学习的编程里（例如 JavaSE），用户的需求可能会影响我们原来的代码，我们需要根据用户的需求去修改源代码，如果程序代码量十分大，修改一次的成本代价十分昂贵。</p>\n<ul>\n<li><p>例如在2020年1-4月份期间自己独立开发（Visual Basic）的排版系统，编写的变量，常量非常多，如果遇到一些特殊的需求（因为疫情会改变排版的基本需求），程序不能满足的话，需要回到源代码的层面上去更改数据，难免是麻烦的，甚至在一些设计不周的情况下出现意想不到的bug。</p>\n<img src=\"/Users/louwenbo/Desktop/image-20200909223653923.png\" alt=\"image-20200909223653923\" style=\"zoom: 50%;\" /></li>\n</ul>\n</li>\n<li><p>之前，程序是主动创建对象，控制权在程序员手上</p>\n</li>\n<li><p>使用了一些方法（例如Set注入），程序不再具有主动性，而是变成了被动的接受对象</p>\n</li>\n</ul>\n<p>这种思想，从本质上解决了问题，<u>程序员不用再去管理对象的创建了。系统的耦合性大大降低，可以使开发更加注重在业务的实现上</u>，这是IoC的原型。</p>\n<h3 id=\"3、IoC本质\"><a href=\"#3、IoC本质\" class=\"headerlink\" title=\"3、IoC本质\"></a>3、IoC本质</h3><ul>\n<li><strong>控制反转IoC（Inversion of Control）,是一种设计思想，DI依赖注入（Dependence Injection）是实现IoC的方法。</strong>在没有IoC的程序中，我们使用面向对象编程，对象的创建与对象间的依赖关系完全硬编码在程序中，对象的创建由程序自己控制，控制反转后将对象的创建转移给第三方。</li>\n<li><strong>IoC是Spring框架的核心内容</strong>，使用多种方式完美的实现了IoC，可以使用XML配置，也可以使用注解，新版本的Spring也可以零配置实现IoC。</li>\n<li>采用XML方式配置Bean的时候，Bean的定义信息是和现实分离的，而采用注解的方式可以把两者合为一体，Bean的定义信息直接以注解的形式定义在实现类中，从而达到了零配置的目的。</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"1、Spring\"><a href=\"#1、Spring\" class=\"headerlink\" title=\"1、Spring\"></a>1、Spring</h3><hr>\n<h5 id=\"1-1、简介-用于面试\"><a href=\"#1-1、简介-用于面试\" class=\"headerlink\" title=\"1.1、简介(用于面试)\"></a>1.1、简介(用于面试)</h5><ul>\n<li>2002年首次推出了Spring框架的雏形</li>\n<li>“不要重复发明轮子（Don’t Reinvent Wheel）”,意思是企业中任何一项工作实际上都有人做过，软件领域中有的功能或者是项目，别人已经做过，我们需要用的时候，直接拿来用即可，而不需要重新创造。可以很好的来解释Spring框架。</li>\n<li>Spring保持强大的向后兼容性。</li>\n<li>解决企业应用开发的复杂性</li>\n<li>Spring是一个轻量级控制反转（IoC）和面向切面（AOP）的容器框架</li>\n<li>Spring的理念：使现有的技术更加容易使用</li>\n<li>SSH（Struct2 + Spring + Hibernate）</li>\n<li>SSM(Spring + SpringMVC + Mybatis)</li>\n</ul>\n<h5 id=\"1-2、优点、缺点\"><a href=\"#1-2、优点、缺点\" class=\"headerlink\" title=\"1.2、优点、缺点\"></a>1.2、优点、缺点</h5><ol>\n<li>优点</li>\n</ol>\n<ul>\n<li><p>开源免费框架（容器）</p>\n</li>\n<li><p>轻量级，<u>非侵入式的框架</u></p>\n</li>\n<li><p><u>控制反转（IoC），面向切面编程（AOP）</u></p>\n</li>\n</ul>\n<ol start=\"2\">\n<li>缺点</li>\n</ol>\n<ul>\n<li>发展太久之后，违背了原来的理念，配置非常繁琐。（很多同学都在Spring的配置文件上劝退了）</li>\n</ul>\n<h5 id=\"1-3、组成\"><a href=\"#1-3、组成\" class=\"headerlink\" title=\"1.3、组成\"></a>1.3、组成</h5><p><img src=\"/Users/louwenbo/Desktop/image-20200909231721960.png\" alt=\"image-20200909231721960\"></p>\n<h5 id=\"1-4、拓展\"><a href=\"#1-4、拓展\" class=\"headerlink\" title=\"1.4、拓展\"></a>1.4、拓展</h5><img src=\"/Users/louwenbo/Desktop/image-20200909220617974.png\" alt=\"image-20200909220617974\" style=\"zoom: 50%;\" />\n\n<ul>\n<li>Spring Boot<ul>\n<li>一个快速开发的脚手架</li>\n<li>基于SpringBoot可以快速的开发单个微服务</li>\n<li>约定大于配置（COC）</li>\n</ul>\n</li>\n<li>Spring Cloud<ul>\n<li>SpringCloud是基于SpringBoot实现的</li>\n</ul>\n</li>\n</ul>\n<p>目前很多大公司都在使用SpringBoot进行快速开发，学习SpringBoot的前提，需要完全掌握Spring及SpringMVC</p>\n<h3 id=\"2、IoC理论推导\"><a href=\"#2、IoC理论推导\" class=\"headerlink\" title=\"2、IoC理论推导\"></a>2、IoC理论推导</h3><ol>\n<li>UserDao接口</li>\n<li>UserDaoImpl实现类</li>\n<li>UserService业务接口</li>\n<li>UserServiceImpl业务员实现类</li>\n</ol>\n<ul>\n<li><p>在之前所学习的编程里（例如 JavaSE），用户的需求可能会影响我们原来的代码，我们需要根据用户的需求去修改源代码，如果程序代码量十分大，修改一次的成本代价十分昂贵。</p>\n<ul>\n<li><p>例如在2020年1-4月份期间自己独立开发（Visual Basic）的排版系统，编写的变量，常量非常多，如果遇到一些特殊的需求（因为疫情会改变排版的基本需求），程序不能满足的话，需要回到源代码的层面上去更改数据，难免是麻烦的，甚至在一些设计不周的情况下出现意想不到的bug。</p>\n<img src=\"/Users/louwenbo/Desktop/image-20200909223653923.png\" alt=\"image-20200909223653923\" style=\"zoom: 50%;\" /></li>\n</ul>\n</li>\n<li><p>之前，程序是主动创建对象，控制权在程序员手上</p>\n</li>\n<li><p>使用了一些方法（例如Set注入），程序不再具有主动性，而是变成了被动的接受对象</p>\n</li>\n</ul>\n<p>这种思想，从本质上解决了问题，<u>程序员不用再去管理对象的创建了。系统的耦合性大大降低，可以使开发更加注重在业务的实现上</u>，这是IoC的原型。</p>\n<h3 id=\"3、IoC本质\"><a href=\"#3、IoC本质\" class=\"headerlink\" title=\"3、IoC本质\"></a>3、IoC本质</h3><ul>\n<li><strong>控制反转IoC（Inversion of Control）,是一种设计思想，DI依赖注入（Dependence Injection）是实现IoC的方法。</strong>在没有IoC的程序中，我们使用面向对象编程，对象的创建与对象间的依赖关系完全硬编码在程序中，对象的创建由程序自己控制，控制反转后将对象的创建转移给第三方。</li>\n<li><strong>IoC是Spring框架的核心内容</strong>，使用多种方式完美的实现了IoC，可以使用XML配置，也可以使用注解，新版本的Spring也可以零配置实现IoC。</li>\n<li>采用XML方式配置Bean的时候，Bean的定义信息是和现实分离的，而采用注解的方式可以把两者合为一体，Bean的定义信息直接以注解的形式定义在实现类中，从而达到了零配置的目的。</li>\n</ul>\n"},{"_content":"### **Servlet**\n\n- Servlet主要用于处理客户端传来的HTTP请求，并返回一个响应，它能够处理的请求有doGet()和doPost()等方法。\n- Servlet由Servlet容器提供，所谓的Servlet容器是指提供了Servlet 功能的服务器（例如Tomcat），Servlet容器将Servlet动态的加载到服务器上。与HTTP 协议相关的Servlet使用HTTP请求和HTTP响应与客户端进行交互。因此，Servlet容器支持所有HTTP协议的请求和响应。Servlet应用程序的体系结构如图所示。\n\n![image-20200825092752267](/Users/louwenbo/Library/Application Support/typora-user-images/image-20200825092752267.png)\n\n- Servlet的请求首先会被HTTP服务器接收，HTTP服务器只负责静态HTML页面的解析，对于Servlet的请求转交给Servlet容器，Servlet容器会根据web.xml文件中的映射关系，调用相应的Servlet，Servlet将处理的结果返回给Servlet容器，并通过HTTP服务器将响应传输给客户端。\n\n- Servlet技术具有如下特点：\n\n- - 方便：Servlet提供了大量的实用工具例程，如处理很难完成的HTML表单数据、读取和设置HTTP头，以及处理Cookie和跟踪会话等。\n  - 跨平台：Servlet用Java类编写，可以在不同操作系统平台和不同应用服务器平台下运行。\n  - 灵活性和可扩展性：采用Servlet开发的Web应用程序，由于Java类的继承性及构造函数等特点，使得应用灵活，可随意扩展。","source":"_posts/Servlet.md","raw":"### **Servlet**\n\n- Servlet主要用于处理客户端传来的HTTP请求，并返回一个响应，它能够处理的请求有doGet()和doPost()等方法。\n- Servlet由Servlet容器提供，所谓的Servlet容器是指提供了Servlet 功能的服务器（例如Tomcat），Servlet容器将Servlet动态的加载到服务器上。与HTTP 协议相关的Servlet使用HTTP请求和HTTP响应与客户端进行交互。因此，Servlet容器支持所有HTTP协议的请求和响应。Servlet应用程序的体系结构如图所示。\n\n![image-20200825092752267](/Users/louwenbo/Library/Application Support/typora-user-images/image-20200825092752267.png)\n\n- Servlet的请求首先会被HTTP服务器接收，HTTP服务器只负责静态HTML页面的解析，对于Servlet的请求转交给Servlet容器，Servlet容器会根据web.xml文件中的映射关系，调用相应的Servlet，Servlet将处理的结果返回给Servlet容器，并通过HTTP服务器将响应传输给客户端。\n\n- Servlet技术具有如下特点：\n\n- - 方便：Servlet提供了大量的实用工具例程，如处理很难完成的HTML表单数据、读取和设置HTTP头，以及处理Cookie和跟踪会话等。\n  - 跨平台：Servlet用Java类编写，可以在不同操作系统平台和不同应用服务器平台下运行。\n  - 灵活性和可扩展性：采用Servlet开发的Web应用程序，由于Java类的继承性及构造函数等特点，使得应用灵活，可随意扩展。","slug":"Servlet","published":1,"date":"2020-08-25T01:36:32.314Z","updated":"2020-08-25T01:36:32.314Z","title":"","comments":1,"layout":"post","photos":[],"link":"","_id":"cldnbidhx0004u99kezjw7qub","content":"<h3 id=\"Servlet\"><a href=\"#Servlet\" class=\"headerlink\" title=\"Servlet\"></a><strong>Servlet</strong></h3><ul>\n<li>Servlet主要用于处理客户端传来的HTTP请求，并返回一个响应，它能够处理的请求有doGet()和doPost()等方法。</li>\n<li>Servlet由Servlet容器提供，所谓的Servlet容器是指提供了Servlet 功能的服务器（例如Tomcat），Servlet容器将Servlet动态的加载到服务器上。与HTTP 协议相关的Servlet使用HTTP请求和HTTP响应与客户端进行交互。因此，Servlet容器支持所有HTTP协议的请求和响应。Servlet应用程序的体系结构如图所示。</li>\n</ul>\n<p>![image-20200825092752267](&#x2F;Users&#x2F;louwenbo&#x2F;Library&#x2F;Application Support&#x2F;typora-user-images&#x2F;image-20200825092752267.png)</p>\n<ul>\n<li><p>Servlet的请求首先会被HTTP服务器接收，HTTP服务器只负责静态HTML页面的解析，对于Servlet的请求转交给Servlet容器，Servlet容器会根据web.xml文件中的映射关系，调用相应的Servlet，Servlet将处理的结果返回给Servlet容器，并通过HTTP服务器将响应传输给客户端。</p>\n</li>\n<li><p>Servlet技术具有如下特点：</p>\n</li>\n<li><ul>\n<li>方便：Servlet提供了大量的实用工具例程，如处理很难完成的HTML表单数据、读取和设置HTTP头，以及处理Cookie和跟踪会话等。</li>\n<li>跨平台：Servlet用Java类编写，可以在不同操作系统平台和不同应用服务器平台下运行。</li>\n<li>灵活性和可扩展性：采用Servlet开发的Web应用程序，由于Java类的继承性及构造函数等特点，使得应用灵活，可随意扩展。</li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"Servlet\"><a href=\"#Servlet\" class=\"headerlink\" title=\"Servlet\"></a><strong>Servlet</strong></h3><ul>\n<li>Servlet主要用于处理客户端传来的HTTP请求，并返回一个响应，它能够处理的请求有doGet()和doPost()等方法。</li>\n<li>Servlet由Servlet容器提供，所谓的Servlet容器是指提供了Servlet 功能的服务器（例如Tomcat），Servlet容器将Servlet动态的加载到服务器上。与HTTP 协议相关的Servlet使用HTTP请求和HTTP响应与客户端进行交互。因此，Servlet容器支持所有HTTP协议的请求和响应。Servlet应用程序的体系结构如图所示。</li>\n</ul>\n<p>![image-20200825092752267](&#x2F;Users&#x2F;louwenbo&#x2F;Library&#x2F;Application Support&#x2F;typora-user-images&#x2F;image-20200825092752267.png)</p>\n<ul>\n<li><p>Servlet的请求首先会被HTTP服务器接收，HTTP服务器只负责静态HTML页面的解析，对于Servlet的请求转交给Servlet容器，Servlet容器会根据web.xml文件中的映射关系，调用相应的Servlet，Servlet将处理的结果返回给Servlet容器，并通过HTTP服务器将响应传输给客户端。</p>\n</li>\n<li><p>Servlet技术具有如下特点：</p>\n</li>\n<li><ul>\n<li>方便：Servlet提供了大量的实用工具例程，如处理很难完成的HTML表单数据、读取和设置HTTP头，以及处理Cookie和跟踪会话等。</li>\n<li>跨平台：Servlet用Java类编写，可以在不同操作系统平台和不同应用服务器平台下运行。</li>\n<li>灵活性和可扩展性：采用Servlet开发的Web应用程序，由于Java类的继承性及构造函数等特点，使得应用灵活，可随意扩展。</li>\n</ul>\n</li>\n</ul>\n"},{"_content":"shell 进程查看：\n\n```shell\nps aux\n```\n\ntomcat实时日志查看：\n\n```shell\n先切换到tomcat的logs目录：\ncd /usr/local/tomcat/logs\ntail -f catalina.out\n然后Ctrl+c退出tail\n```\n\n","source":"_posts/云服务器进程查看.md","raw":"shell 进程查看：\n\n```shell\nps aux\n```\n\ntomcat实时日志查看：\n\n```shell\n先切换到tomcat的logs目录：\ncd /usr/local/tomcat/logs\ntail -f catalina.out\n然后Ctrl+c退出tail\n```\n\n","slug":"云服务器进程查看","published":1,"date":"2020-08-14T11:33:29.000Z","updated":"2020-08-14T11:33:29.000Z","title":"","comments":1,"layout":"post","photos":[],"link":"","_id":"cldnbidhx0005u99k9km7haf4","content":"<p>shell 进程查看：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ps aux</span><br></pre></td></tr></table></figure>\n\n<p>tomcat实时日志查看：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">先切换到tomcat的logs目录：</span><br><span class=\"line\">cd /usr/local/tomcat/logs</span><br><span class=\"line\">tail -f catalina.out</span><br><span class=\"line\">然后Ctrl+c退出tail</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<p>shell 进程查看：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ps aux</span><br></pre></td></tr></table></figure>\n\n<p>tomcat实时日志查看：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">先切换到tomcat的logs目录：</span><br><span class=\"line\">cd /usr/local/tomcat/logs</span><br><span class=\"line\">tail -f catalina.out</span><br><span class=\"line\">然后Ctrl+c退出tail</span><br></pre></td></tr></table></figure>\n\n"},{"_content":"记录一下自己学习的过程，不足之处待谅解😁\n\n```java\nimport java.util.*;\npublic class test {\n    //冒泡排序\n    public static int[] BubbleSort(int arr[]){\n        int small = 0;  //临时变量储存较小的数据\n        for (int j = 0;j< arr.length;j++) { //冒泡趟数\n            for (int i = 1; i < arr.length - j; i++) {//从第二项（arr[1]）开始排序，防止溢出报错\n                if (arr[i - 1] > arr[i]) {  //判断\n                    small = arr[i];     //交换数据\n                    arr[i] = arr[i - 1];\n                    arr[i - 1] = small;\n                }\n            }\n        }\n        return arr;\n    }\n    public static void main(String[] args) {\n        int[] arr = new int[]{5,79,32,74,35,76,33,15,6,0};\n        int[] arr1 = new int []{231,345,7654,23421,875,90,42,123,532};\n        BubbleSort(arr);\n        for (int i = 0; i < arr.length; i++) {  //for循环输出方法\n            System.out.print(arr[i] + \" \");\n        }\n        System.out.println();\n        BubbleSort(arr1);\n        System.out.println(Arrays.toString(arr1));  //更简单的输出方法Arrays.toString\n    }\n}\n\n```\n\n运行结果：\n\n```shell\n0 5 6 15 32 33 35 74 76 79 \t//for 循环输出\n[42, 90, 123, 231, 345, 532, 875, 7654, 23421]\t//Arrays.toString输出\n\nProcess finished with exit code 0\n\n```\n\n","source":"_posts/冒泡排序.md","raw":"记录一下自己学习的过程，不足之处待谅解😁\n\n```java\nimport java.util.*;\npublic class test {\n    //冒泡排序\n    public static int[] BubbleSort(int arr[]){\n        int small = 0;  //临时变量储存较小的数据\n        for (int j = 0;j< arr.length;j++) { //冒泡趟数\n            for (int i = 1; i < arr.length - j; i++) {//从第二项（arr[1]）开始排序，防止溢出报错\n                if (arr[i - 1] > arr[i]) {  //判断\n                    small = arr[i];     //交换数据\n                    arr[i] = arr[i - 1];\n                    arr[i - 1] = small;\n                }\n            }\n        }\n        return arr;\n    }\n    public static void main(String[] args) {\n        int[] arr = new int[]{5,79,32,74,35,76,33,15,6,0};\n        int[] arr1 = new int []{231,345,7654,23421,875,90,42,123,532};\n        BubbleSort(arr);\n        for (int i = 0; i < arr.length; i++) {  //for循环输出方法\n            System.out.print(arr[i] + \" \");\n        }\n        System.out.println();\n        BubbleSort(arr1);\n        System.out.println(Arrays.toString(arr1));  //更简单的输出方法Arrays.toString\n    }\n}\n\n```\n\n运行结果：\n\n```shell\n0 5 6 15 32 33 35 74 76 79 \t//for 循环输出\n[42, 90, 123, 231, 345, 532, 875, 7654, 23421]\t//Arrays.toString输出\n\nProcess finished with exit code 0\n\n```\n\n","slug":"冒泡排序","published":1,"date":"2020-10-31T09:04:34.000Z","updated":"2020-10-31T09:04:34.000Z","title":"","comments":1,"layout":"post","photos":[],"link":"","_id":"cldnbidhy0006u99kgboo7v00","content":"<p>记录一下自己学习的过程，不足之处待谅解😁</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.*;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">test</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">//冒泡排序</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"type\">int</span>[] BubbleSort(<span class=\"type\">int</span> arr[])&#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">small</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;  <span class=\"comment\">//临时变量储存较小的数据</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">j</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;j&lt; arr.length;j++) &#123; <span class=\"comment\">//冒泡趟数</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">1</span>; i &lt; arr.length - j; i++) &#123;<span class=\"comment\">//从第二项（arr[1]）开始排序，防止溢出报错</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> (arr[i - <span class=\"number\">1</span>] &gt; arr[i]) &#123;  <span class=\"comment\">//判断</span></span><br><span class=\"line\">                    small = arr[i];     <span class=\"comment\">//交换数据</span></span><br><span class=\"line\">                    arr[i] = arr[i - <span class=\"number\">1</span>];</span><br><span class=\"line\">                    arr[i - <span class=\"number\">1</span>] = small;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> arr;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span>[] arr = <span class=\"keyword\">new</span> <span class=\"title class_\">int</span>[]&#123;<span class=\"number\">5</span>,<span class=\"number\">79</span>,<span class=\"number\">32</span>,<span class=\"number\">74</span>,<span class=\"number\">35</span>,<span class=\"number\">76</span>,<span class=\"number\">33</span>,<span class=\"number\">15</span>,<span class=\"number\">6</span>,<span class=\"number\">0</span>&#125;;</span><br><span class=\"line\">        <span class=\"type\">int</span>[] arr1 = <span class=\"keyword\">new</span> <span class=\"title class_\">int</span> []&#123;<span class=\"number\">231</span>,<span class=\"number\">345</span>,<span class=\"number\">7654</span>,<span class=\"number\">23421</span>,<span class=\"number\">875</span>,<span class=\"number\">90</span>,<span class=\"number\">42</span>,<span class=\"number\">123</span>,<span class=\"number\">532</span>&#125;;</span><br><span class=\"line\">        BubbleSort(arr);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; arr.length; i++) &#123;  <span class=\"comment\">//for循环输出方法</span></span><br><span class=\"line\">            System.out.print(arr[i] + <span class=\"string\">&quot; &quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        System.out.println();</span><br><span class=\"line\">        BubbleSort(arr1);</span><br><span class=\"line\">        System.out.println(Arrays.toString(arr1));  <span class=\"comment\">//更简单的输出方法Arrays.toString</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>运行结果：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">0 5 6 15 32 33 35 74 76 79 \t//for 循环输出</span><br><span class=\"line\">[42, 90, 123, 231, 345, 532, 875, 7654, 23421]\t//Arrays.toString输出</span><br><span class=\"line\"></span><br><span class=\"line\">Process finished with exit code 0</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<p>记录一下自己学习的过程，不足之处待谅解😁</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.*;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">test</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">//冒泡排序</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"type\">int</span>[] BubbleSort(<span class=\"type\">int</span> arr[])&#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">small</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;  <span class=\"comment\">//临时变量储存较小的数据</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">j</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;j&lt; arr.length;j++) &#123; <span class=\"comment\">//冒泡趟数</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">1</span>; i &lt; arr.length - j; i++) &#123;<span class=\"comment\">//从第二项（arr[1]）开始排序，防止溢出报错</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> (arr[i - <span class=\"number\">1</span>] &gt; arr[i]) &#123;  <span class=\"comment\">//判断</span></span><br><span class=\"line\">                    small = arr[i];     <span class=\"comment\">//交换数据</span></span><br><span class=\"line\">                    arr[i] = arr[i - <span class=\"number\">1</span>];</span><br><span class=\"line\">                    arr[i - <span class=\"number\">1</span>] = small;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> arr;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span>[] arr = <span class=\"keyword\">new</span> <span class=\"title class_\">int</span>[]&#123;<span class=\"number\">5</span>,<span class=\"number\">79</span>,<span class=\"number\">32</span>,<span class=\"number\">74</span>,<span class=\"number\">35</span>,<span class=\"number\">76</span>,<span class=\"number\">33</span>,<span class=\"number\">15</span>,<span class=\"number\">6</span>,<span class=\"number\">0</span>&#125;;</span><br><span class=\"line\">        <span class=\"type\">int</span>[] arr1 = <span class=\"keyword\">new</span> <span class=\"title class_\">int</span> []&#123;<span class=\"number\">231</span>,<span class=\"number\">345</span>,<span class=\"number\">7654</span>,<span class=\"number\">23421</span>,<span class=\"number\">875</span>,<span class=\"number\">90</span>,<span class=\"number\">42</span>,<span class=\"number\">123</span>,<span class=\"number\">532</span>&#125;;</span><br><span class=\"line\">        BubbleSort(arr);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; arr.length; i++) &#123;  <span class=\"comment\">//for循环输出方法</span></span><br><span class=\"line\">            System.out.print(arr[i] + <span class=\"string\">&quot; &quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        System.out.println();</span><br><span class=\"line\">        BubbleSort(arr1);</span><br><span class=\"line\">        System.out.println(Arrays.toString(arr1));  <span class=\"comment\">//更简单的输出方法Arrays.toString</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>运行结果：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">0 5 6 15 32 33 35 74 76 79 \t//for 循环输出</span><br><span class=\"line\">[42, 90, 123, 231, 345, 532, 875, 7654, 23421]\t//Arrays.toString输出</span><br><span class=\"line\"></span><br><span class=\"line\">Process finished with exit code 0</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n"},{"_content":"### 为wordpress添加固定链接，使得访问更快\n\n## 1、问题发现\n\n  在为自己的网站添加SSL安全证书后，发现每次打开自己的博客变的异常的耗时，平时自己访问其他网站的时候，加载超过5秒都会觉得非常慢，没想到加载自己的网站会超过15秒，甚至直接访问失败（超过40秒）\n\n####   当时怀疑以下可能是造成访问变慢的原因：\n\n- **添加SSL证书后，经过长时间再次访问会进行安全验证，使得加载变慢（排除）**\n\n​       从理论上来说，因为HTTPS比HTTP多出了SSL握手环节，而事实上，这个环节耗费的时间仅有几百毫秒(0.1秒=100毫秒)。不了解的人可能会认为这一环节的增加会使得网站的访问速度变慢，但这几百毫秒我们很难发觉速度上的变化，这就好比身上落了一粒灰尘我们并不会感觉到体重增加了\n\n- **网站需要加载的文件过大（图片、音频）（未知）**\n\n​       之前在Wordpress配置文件中，将上传文件的大小从2MB更改到64MB（设置的壁纸有些超过了2MB，所以干脆设置大些）\n\n- **同时启动了自己的Java项目，怀疑内存占用过多（排除）**\n\n  ```shell\n  ps aux 查看各个进程时，发现运行的Java项目占了11%的内存\n  ```\n\n  关闭Java项目后，网站仍存在同样的问题\n\n- **云服务器带宽太小了，只有1Mbps的带宽（排除）**\n\n​       有网友说他的云服务器带宽有10Mbps，即使在这么高的带宽下，也会出现相同的情况，访问网站依旧很慢，排除此原因\n\n- **Wordpress系统默认使用谷歌字体（已解决）**\n\n  在国内谷歌域名被屏蔽，所以导致操作反应慢。对于很多商业主题默认使用了谷歌字体、谷歌ajax库、谷歌地图等谷歌服务，所以导致网站前台访问速度慢。\n\n  有两种解决方案：\n\n  1. 修改wordpress的PHP文件，具体做法如下：\n\n  https://www.trustauth.cn/wiki/8918.html\n\n  2. 下载插件，禁用/删除Google字体：\n\n  \n\n  ![如何解决wordpress访问速度慢的问题](https://exp-picture.cdn.bcebos.com/3d002dbad341037d32e75fc2a9bc7dc5ce672d65.jpg?x-bce-process=image%2Fresize%2Cm_lfit%2Cw_500%2Climit_1)\n\n  ![如何解决wordpress访问速度慢的问题](https://exp-picture.cdn.bcebos.com/d4071b96b814f4d068d35e66cdfe474ec3832365.jpg?x-bce-process=image%2Fresize%2Cm_lfit%2Cw_500%2Climit_1)\n\n  ![如何解决wordpress访问速度慢的问题](https://exp-picture.cdn.bcebos.com/b57fb6db574afa32794cba4354b2dc19cf2c1465.jpg?x-bce-process=image%2Fresize%2Cm_lfit%2Cw_500%2Climit_1)\n\n  ---\n\n  ## 2、解决问题\n\n    **使用插件“WP Super Cache”，一款WordPress的快速缓存插件**\n\n    WP Super Cache 是 WordPress 官方开发人员 Donncha 开发，是当前最高效也是最灵活的 WordPress 静态[缓存插件](https://www.wpdaxue.com/tag/缓存插件)。它把整个网页直接生成 HTML 文件，这样 Apache 就不用解析 PHP 脚本，通过使用这个插件，能使得 WordPress 博客获将显著的提速。\n\n    在使用WP Super Cache插件时，遇到了固定链接的问题：\n\n  1. WP Super Cache插件的使用前提是网站需要开启固定链接\n\n  ![wordpress设置固定链接后页面404错误怎么办](https://exp-picture.cdn.bcebos.com/5c9c964ce54a2f2719b20ab5e00192dd3240f4f0.jpg?x-bce-process=image%2Fresize%2Cm_lfit%2Cw_500%2Climit_1)\n\n  2. 个人博客开启固定链接时，整个博客会出现404，导致整个网站崩溃：\n\n  ![wordpress设置固定链接后页面404错误怎么办](https://exp-picture.cdn.bcebos.com/90c61d1c99c0affce9d8069c2372941fbfe4eaf0.jpg?x-bce-process=image%2Fresize%2Cm_lfit%2Cw_500%2Climit_1)\n\n  #### 解决办法：\n\n- ```shell\n  vim /etc/httpd/conf/httpd.conf\t\t打开Apache配置文件\n  ```\n\n   （找这个文件耗了非常久的时间，一是找到apache配置，wordpress配置）\n\n- 在该文件中，修改配置\n\n注意：需要在<Directory \"/var/www/html\">配置下的\n\n```shell\nAllOverride None 进行修改\n```\n\n把“None”修改为“All”\n\n![wordpress设置固定链接后页面404错误怎么办](https://exp-picture.cdn.bcebos.com/df087f0f8b56ad040c36355adae10ef85956d0f0.jpg?x-bce-process=image%2Fresize%2Cm_lfit%2Cw_500%2Climit_1)\n\n- 最后重启Apache服务，问题解决！\n\n  \n\n  ### 补充一下关于Apcahe相关的知识：\n\n  ​    对于Linux系统中服务的配置就是在修改其配置文件，因此还需要知道这些配置文件分别干什么用的，以及存放到了什么位置：\n\n  | 服务目录     | /etc/httpd                 |\n  | ------------ | -------------------------- |\n  | 主配置文件   | /etc/httpd/conf/httpd.conf |\n  | 网站数据目录 | /var/www/html              |\n  | 访问日志     | /var/log/httpd/access_log  |\n  | 错误日志     | /var/log/httpd/error_log   |\n\n  （采用自：https://blog.csdn.net/shj_php/article/details/79495861）\n\n  ### 补充一下关于固定链接的相关知识：\n\n  ​    固定链接是你个人博客里的文章、分类以及其他页面的固定链接地址。通过固定链接，别的博友可以链到你写的博客，你也可以将这个链接地址写在邮件里发给其他人看。如果博客的链接地址变来变去，会造成其他人通过之前的链接地址来浏览博客时出错，所以每篇博客的链接地址都应该固定，而且永久不改———这也是*固定*链接名字的由来。\n\n  更多：https://codex.wordpress.org/zh-cn:%E4%BD%BF%E7%94%A8%E5%9B%BA%E5%AE%9A%E9%93%BE%E6%8E%A5\n\n  （wordpress官方文档）\n\n","source":"_posts/加快网站访问速度，wordpress.md","raw":"### 为wordpress添加固定链接，使得访问更快\n\n## 1、问题发现\n\n  在为自己的网站添加SSL安全证书后，发现每次打开自己的博客变的异常的耗时，平时自己访问其他网站的时候，加载超过5秒都会觉得非常慢，没想到加载自己的网站会超过15秒，甚至直接访问失败（超过40秒）\n\n####   当时怀疑以下可能是造成访问变慢的原因：\n\n- **添加SSL证书后，经过长时间再次访问会进行安全验证，使得加载变慢（排除）**\n\n​       从理论上来说，因为HTTPS比HTTP多出了SSL握手环节，而事实上，这个环节耗费的时间仅有几百毫秒(0.1秒=100毫秒)。不了解的人可能会认为这一环节的增加会使得网站的访问速度变慢，但这几百毫秒我们很难发觉速度上的变化，这就好比身上落了一粒灰尘我们并不会感觉到体重增加了\n\n- **网站需要加载的文件过大（图片、音频）（未知）**\n\n​       之前在Wordpress配置文件中，将上传文件的大小从2MB更改到64MB（设置的壁纸有些超过了2MB，所以干脆设置大些）\n\n- **同时启动了自己的Java项目，怀疑内存占用过多（排除）**\n\n  ```shell\n  ps aux 查看各个进程时，发现运行的Java项目占了11%的内存\n  ```\n\n  关闭Java项目后，网站仍存在同样的问题\n\n- **云服务器带宽太小了，只有1Mbps的带宽（排除）**\n\n​       有网友说他的云服务器带宽有10Mbps，即使在这么高的带宽下，也会出现相同的情况，访问网站依旧很慢，排除此原因\n\n- **Wordpress系统默认使用谷歌字体（已解决）**\n\n  在国内谷歌域名被屏蔽，所以导致操作反应慢。对于很多商业主题默认使用了谷歌字体、谷歌ajax库、谷歌地图等谷歌服务，所以导致网站前台访问速度慢。\n\n  有两种解决方案：\n\n  1. 修改wordpress的PHP文件，具体做法如下：\n\n  https://www.trustauth.cn/wiki/8918.html\n\n  2. 下载插件，禁用/删除Google字体：\n\n  \n\n  ![如何解决wordpress访问速度慢的问题](https://exp-picture.cdn.bcebos.com/3d002dbad341037d32e75fc2a9bc7dc5ce672d65.jpg?x-bce-process=image%2Fresize%2Cm_lfit%2Cw_500%2Climit_1)\n\n  ![如何解决wordpress访问速度慢的问题](https://exp-picture.cdn.bcebos.com/d4071b96b814f4d068d35e66cdfe474ec3832365.jpg?x-bce-process=image%2Fresize%2Cm_lfit%2Cw_500%2Climit_1)\n\n  ![如何解决wordpress访问速度慢的问题](https://exp-picture.cdn.bcebos.com/b57fb6db574afa32794cba4354b2dc19cf2c1465.jpg?x-bce-process=image%2Fresize%2Cm_lfit%2Cw_500%2Climit_1)\n\n  ---\n\n  ## 2、解决问题\n\n    **使用插件“WP Super Cache”，一款WordPress的快速缓存插件**\n\n    WP Super Cache 是 WordPress 官方开发人员 Donncha 开发，是当前最高效也是最灵活的 WordPress 静态[缓存插件](https://www.wpdaxue.com/tag/缓存插件)。它把整个网页直接生成 HTML 文件，这样 Apache 就不用解析 PHP 脚本，通过使用这个插件，能使得 WordPress 博客获将显著的提速。\n\n    在使用WP Super Cache插件时，遇到了固定链接的问题：\n\n  1. WP Super Cache插件的使用前提是网站需要开启固定链接\n\n  ![wordpress设置固定链接后页面404错误怎么办](https://exp-picture.cdn.bcebos.com/5c9c964ce54a2f2719b20ab5e00192dd3240f4f0.jpg?x-bce-process=image%2Fresize%2Cm_lfit%2Cw_500%2Climit_1)\n\n  2. 个人博客开启固定链接时，整个博客会出现404，导致整个网站崩溃：\n\n  ![wordpress设置固定链接后页面404错误怎么办](https://exp-picture.cdn.bcebos.com/90c61d1c99c0affce9d8069c2372941fbfe4eaf0.jpg?x-bce-process=image%2Fresize%2Cm_lfit%2Cw_500%2Climit_1)\n\n  #### 解决办法：\n\n- ```shell\n  vim /etc/httpd/conf/httpd.conf\t\t打开Apache配置文件\n  ```\n\n   （找这个文件耗了非常久的时间，一是找到apache配置，wordpress配置）\n\n- 在该文件中，修改配置\n\n注意：需要在<Directory \"/var/www/html\">配置下的\n\n```shell\nAllOverride None 进行修改\n```\n\n把“None”修改为“All”\n\n![wordpress设置固定链接后页面404错误怎么办](https://exp-picture.cdn.bcebos.com/df087f0f8b56ad040c36355adae10ef85956d0f0.jpg?x-bce-process=image%2Fresize%2Cm_lfit%2Cw_500%2Climit_1)\n\n- 最后重启Apache服务，问题解决！\n\n  \n\n  ### 补充一下关于Apcahe相关的知识：\n\n  ​    对于Linux系统中服务的配置就是在修改其配置文件，因此还需要知道这些配置文件分别干什么用的，以及存放到了什么位置：\n\n  | 服务目录     | /etc/httpd                 |\n  | ------------ | -------------------------- |\n  | 主配置文件   | /etc/httpd/conf/httpd.conf |\n  | 网站数据目录 | /var/www/html              |\n  | 访问日志     | /var/log/httpd/access_log  |\n  | 错误日志     | /var/log/httpd/error_log   |\n\n  （采用自：https://blog.csdn.net/shj_php/article/details/79495861）\n\n  ### 补充一下关于固定链接的相关知识：\n\n  ​    固定链接是你个人博客里的文章、分类以及其他页面的固定链接地址。通过固定链接，别的博友可以链到你写的博客，你也可以将这个链接地址写在邮件里发给其他人看。如果博客的链接地址变来变去，会造成其他人通过之前的链接地址来浏览博客时出错，所以每篇博客的链接地址都应该固定，而且永久不改———这也是*固定*链接名字的由来。\n\n  更多：https://codex.wordpress.org/zh-cn:%E4%BD%BF%E7%94%A8%E5%9B%BA%E5%AE%9A%E9%93%BE%E6%8E%A5\n\n  （wordpress官方文档）\n\n","slug":"加快网站访问速度，wordpress","published":1,"date":"2020-10-15T07:12:51.000Z","updated":"2020-10-15T15:18:33.000Z","title":"","comments":1,"layout":"post","photos":[],"link":"","_id":"cldnbidhz0007u99k70ex6a2j","content":"<h3 id=\"为wordpress添加固定链接，使得访问更快\"><a href=\"#为wordpress添加固定链接，使得访问更快\" class=\"headerlink\" title=\"为wordpress添加固定链接，使得访问更快\"></a>为wordpress添加固定链接，使得访问更快</h3><h2 id=\"1、问题发现\"><a href=\"#1、问题发现\" class=\"headerlink\" title=\"1、问题发现\"></a>1、问题发现</h2><p>  在为自己的网站添加SSL安全证书后，发现每次打开自己的博客变的异常的耗时，平时自己访问其他网站的时候，加载超过5秒都会觉得非常慢，没想到加载自己的网站会超过15秒，甚至直接访问失败（超过40秒）</p>\n<h4 id=\"当时怀疑以下可能是造成访问变慢的原因：\"><a href=\"#当时怀疑以下可能是造成访问变慢的原因：\" class=\"headerlink\" title=\"当时怀疑以下可能是造成访问变慢的原因：\"></a>当时怀疑以下可能是造成访问变慢的原因：</h4><ul>\n<li><strong>添加SSL证书后，经过长时间再次访问会进行安全验证，使得加载变慢（排除）</strong></li>\n</ul>\n<p>​       从理论上来说，因为HTTPS比HTTP多出了SSL握手环节，而事实上，这个环节耗费的时间仅有几百毫秒(0.1秒&#x3D;100毫秒)。不了解的人可能会认为这一环节的增加会使得网站的访问速度变慢，但这几百毫秒我们很难发觉速度上的变化，这就好比身上落了一粒灰尘我们并不会感觉到体重增加了</p>\n<ul>\n<li><strong>网站需要加载的文件过大（图片、音频）（未知）</strong></li>\n</ul>\n<p>​       之前在Wordpress配置文件中，将上传文件的大小从2MB更改到64MB（设置的壁纸有些超过了2MB，所以干脆设置大些）</p>\n<ul>\n<li><p><strong>同时启动了自己的Java项目，怀疑内存占用过多（排除）</strong></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ps aux 查看各个进程时，发现运行的Java项目占了11%的内存</span><br></pre></td></tr></table></figure>\n\n<p>关闭Java项目后，网站仍存在同样的问题</p>\n</li>\n<li><p><strong>云服务器带宽太小了，只有1Mbps的带宽（排除）</strong></p>\n</li>\n</ul>\n<p>​       有网友说他的云服务器带宽有10Mbps，即使在这么高的带宽下，也会出现相同的情况，访问网站依旧很慢，排除此原因</p>\n<ul>\n<li><p><strong>Wordpress系统默认使用谷歌字体（已解决）</strong></p>\n<p>在国内谷歌域名被屏蔽，所以导致操作反应慢。对于很多商业主题默认使用了谷歌字体、谷歌ajax库、谷歌地图等谷歌服务，所以导致网站前台访问速度慢。</p>\n<p>有两种解决方案：</p>\n<ol>\n<li>修改wordpress的PHP文件，具体做法如下：</li>\n</ol>\n<p><a href=\"https://www.trustauth.cn/wiki/8918.html\">https://www.trustauth.cn/wiki/8918.html</a></p>\n<ol start=\"2\">\n<li>下载插件，禁用&#x2F;删除Google字体：</li>\n</ol>\n<p><img src=\"https://exp-picture.cdn.bcebos.com/3d002dbad341037d32e75fc2a9bc7dc5ce672d65.jpg?x-bce-process=image/resize,m_lfit,w_500,limit_1\" alt=\"如何解决wordpress访问速度慢的问题\"></p>\n<p><img src=\"https://exp-picture.cdn.bcebos.com/d4071b96b814f4d068d35e66cdfe474ec3832365.jpg?x-bce-process=image/resize,m_lfit,w_500,limit_1\" alt=\"如何解决wordpress访问速度慢的问题\"></p>\n<p><img src=\"https://exp-picture.cdn.bcebos.com/b57fb6db574afa32794cba4354b2dc19cf2c1465.jpg?x-bce-process=image/resize,m_lfit,w_500,limit_1\" alt=\"如何解决wordpress访问速度慢的问题\"></p>\n<hr>\n<h2 id=\"2、解决问题\"><a href=\"#2、解决问题\" class=\"headerlink\" title=\"2、解决问题\"></a>2、解决问题</h2><p>  <strong>使用插件“WP Super Cache”，一款WordPress的快速缓存插件</strong></p>\n<p>  WP Super Cache 是 WordPress 官方开发人员 Donncha 开发，是当前最高效也是最灵活的 WordPress 静态<a href=\"https://www.wpdaxue.com/tag/%E7%BC%93%E5%AD%98%E6%8F%92%E4%BB%B6\">缓存插件</a>。它把整个网页直接生成 HTML 文件，这样 Apache 就不用解析 PHP 脚本，通过使用这个插件，能使得 WordPress 博客获将显著的提速。</p>\n<p>  在使用WP Super Cache插件时，遇到了固定链接的问题：</p>\n<ol>\n<li>WP Super Cache插件的使用前提是网站需要开启固定链接</li>\n</ol>\n<p><img src=\"https://exp-picture.cdn.bcebos.com/5c9c964ce54a2f2719b20ab5e00192dd3240f4f0.jpg?x-bce-process=image/resize,m_lfit,w_500,limit_1\" alt=\"wordpress设置固定链接后页面404错误怎么办\"></p>\n<ol start=\"2\">\n<li>个人博客开启固定链接时，整个博客会出现404，导致整个网站崩溃：</li>\n</ol>\n<p><img src=\"https://exp-picture.cdn.bcebos.com/90c61d1c99c0affce9d8069c2372941fbfe4eaf0.jpg?x-bce-process=image/resize,m_lfit,w_500,limit_1\" alt=\"wordpress设置固定链接后页面404错误怎么办\"></p>\n<h4 id=\"解决办法：\"><a href=\"#解决办法：\" class=\"headerlink\" title=\"解决办法：\"></a>解决办法：</h4></li>\n<li><p>&#96;&#96;&#96;shell<br>vim &#x2F;etc&#x2F;httpd&#x2F;conf&#x2F;httpd.conf\t\t打开Apache配置文件</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">   （找这个文件耗了非常久的时间，一是找到apache配置，wordpress配置）</span><br><span class=\"line\"></span><br><span class=\"line\">- 在该文件中，修改配置</span><br><span class=\"line\"></span><br><span class=\"line\">注意：需要在&lt;Directory &quot;/var/www/html&quot;&gt;配置下的</span><br><span class=\"line\"></span><br><span class=\"line\">```shell</span><br><span class=\"line\">AllOverride None 进行修改</span><br></pre></td></tr></table></figure></li>\n</ul>\n<p>把“None”修改为“All”</p>\n<p><img src=\"https://exp-picture.cdn.bcebos.com/df087f0f8b56ad040c36355adae10ef85956d0f0.jpg?x-bce-process=image/resize,m_lfit,w_500,limit_1\" alt=\"wordpress设置固定链接后页面404错误怎么办\"></p>\n<ul>\n<li><p>最后重启Apache服务，问题解决！</p>\n<h3 id=\"补充一下关于Apcahe相关的知识：\"><a href=\"#补充一下关于Apcahe相关的知识：\" class=\"headerlink\" title=\"补充一下关于Apcahe相关的知识：\"></a>补充一下关于Apcahe相关的知识：</h3><p>​    对于Linux系统中服务的配置就是在修改其配置文件，因此还需要知道这些配置文件分别干什么用的，以及存放到了什么位置：</p>\n<table>\n<thead>\n<tr>\n<th>服务目录</th>\n<th>&#x2F;etc&#x2F;httpd</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>主配置文件</td>\n<td>&#x2F;etc&#x2F;httpd&#x2F;conf&#x2F;httpd.conf</td>\n</tr>\n<tr>\n<td>网站数据目录</td>\n<td>&#x2F;var&#x2F;www&#x2F;html</td>\n</tr>\n<tr>\n<td>访问日志</td>\n<td>&#x2F;var&#x2F;log&#x2F;httpd&#x2F;access_log</td>\n</tr>\n<tr>\n<td>错误日志</td>\n<td>&#x2F;var&#x2F;log&#x2F;httpd&#x2F;error_log</td>\n</tr>\n</tbody></table>\n<p>（采用自：<a href=\"https://blog.csdn.net/shj_php/article/details/79495861%EF%BC%89\">https://blog.csdn.net/shj_php/article/details/79495861）</a></p>\n<h3 id=\"补充一下关于固定链接的相关知识：\"><a href=\"#补充一下关于固定链接的相关知识：\" class=\"headerlink\" title=\"补充一下关于固定链接的相关知识：\"></a>补充一下关于固定链接的相关知识：</h3><p>​    固定链接是你个人博客里的文章、分类以及其他页面的固定链接地址。通过固定链接，别的博友可以链到你写的博客，你也可以将这个链接地址写在邮件里发给其他人看。如果博客的链接地址变来变去，会造成其他人通过之前的链接地址来浏览博客时出错，所以每篇博客的链接地址都应该固定，而且永久不改———这也是<em>固定</em>链接名字的由来。</p>\n<p>更多：<a href=\"https://codex.wordpress.org/zh-cn:%E4%BD%BF%E7%94%A8%E5%9B%BA%E5%AE%9A%E9%93%BE%E6%8E%A5\">https://codex.wordpress.org/zh-cn:%E4%BD%BF%E7%94%A8%E5%9B%BA%E5%AE%9A%E9%93%BE%E6%8E%A5</a></p>\n<p>（wordpress官方文档）</p>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"为wordpress添加固定链接，使得访问更快\"><a href=\"#为wordpress添加固定链接，使得访问更快\" class=\"headerlink\" title=\"为wordpress添加固定链接，使得访问更快\"></a>为wordpress添加固定链接，使得访问更快</h3><h2 id=\"1、问题发现\"><a href=\"#1、问题发现\" class=\"headerlink\" title=\"1、问题发现\"></a>1、问题发现</h2><p>  在为自己的网站添加SSL安全证书后，发现每次打开自己的博客变的异常的耗时，平时自己访问其他网站的时候，加载超过5秒都会觉得非常慢，没想到加载自己的网站会超过15秒，甚至直接访问失败（超过40秒）</p>\n<h4 id=\"当时怀疑以下可能是造成访问变慢的原因：\"><a href=\"#当时怀疑以下可能是造成访问变慢的原因：\" class=\"headerlink\" title=\"当时怀疑以下可能是造成访问变慢的原因：\"></a>当时怀疑以下可能是造成访问变慢的原因：</h4><ul>\n<li><strong>添加SSL证书后，经过长时间再次访问会进行安全验证，使得加载变慢（排除）</strong></li>\n</ul>\n<p>​       从理论上来说，因为HTTPS比HTTP多出了SSL握手环节，而事实上，这个环节耗费的时间仅有几百毫秒(0.1秒&#x3D;100毫秒)。不了解的人可能会认为这一环节的增加会使得网站的访问速度变慢，但这几百毫秒我们很难发觉速度上的变化，这就好比身上落了一粒灰尘我们并不会感觉到体重增加了</p>\n<ul>\n<li><strong>网站需要加载的文件过大（图片、音频）（未知）</strong></li>\n</ul>\n<p>​       之前在Wordpress配置文件中，将上传文件的大小从2MB更改到64MB（设置的壁纸有些超过了2MB，所以干脆设置大些）</p>\n<ul>\n<li><p><strong>同时启动了自己的Java项目，怀疑内存占用过多（排除）</strong></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ps aux 查看各个进程时，发现运行的Java项目占了11%的内存</span><br></pre></td></tr></table></figure>\n\n<p>关闭Java项目后，网站仍存在同样的问题</p>\n</li>\n<li><p><strong>云服务器带宽太小了，只有1Mbps的带宽（排除）</strong></p>\n</li>\n</ul>\n<p>​       有网友说他的云服务器带宽有10Mbps，即使在这么高的带宽下，也会出现相同的情况，访问网站依旧很慢，排除此原因</p>\n<ul>\n<li><p><strong>Wordpress系统默认使用谷歌字体（已解决）</strong></p>\n<p>在国内谷歌域名被屏蔽，所以导致操作反应慢。对于很多商业主题默认使用了谷歌字体、谷歌ajax库、谷歌地图等谷歌服务，所以导致网站前台访问速度慢。</p>\n<p>有两种解决方案：</p>\n<ol>\n<li>修改wordpress的PHP文件，具体做法如下：</li>\n</ol>\n<p><a href=\"https://www.trustauth.cn/wiki/8918.html\">https://www.trustauth.cn/wiki/8918.html</a></p>\n<ol start=\"2\">\n<li>下载插件，禁用&#x2F;删除Google字体：</li>\n</ol>\n<p><img src=\"https://exp-picture.cdn.bcebos.com/3d002dbad341037d32e75fc2a9bc7dc5ce672d65.jpg?x-bce-process=image/resize,m_lfit,w_500,limit_1\" alt=\"如何解决wordpress访问速度慢的问题\"></p>\n<p><img src=\"https://exp-picture.cdn.bcebos.com/d4071b96b814f4d068d35e66cdfe474ec3832365.jpg?x-bce-process=image/resize,m_lfit,w_500,limit_1\" alt=\"如何解决wordpress访问速度慢的问题\"></p>\n<p><img src=\"https://exp-picture.cdn.bcebos.com/b57fb6db574afa32794cba4354b2dc19cf2c1465.jpg?x-bce-process=image/resize,m_lfit,w_500,limit_1\" alt=\"如何解决wordpress访问速度慢的问题\"></p>\n<hr>\n<h2 id=\"2、解决问题\"><a href=\"#2、解决问题\" class=\"headerlink\" title=\"2、解决问题\"></a>2、解决问题</h2><p>  <strong>使用插件“WP Super Cache”，一款WordPress的快速缓存插件</strong></p>\n<p>  WP Super Cache 是 WordPress 官方开发人员 Donncha 开发，是当前最高效也是最灵活的 WordPress 静态<a href=\"https://www.wpdaxue.com/tag/%E7%BC%93%E5%AD%98%E6%8F%92%E4%BB%B6\">缓存插件</a>。它把整个网页直接生成 HTML 文件，这样 Apache 就不用解析 PHP 脚本，通过使用这个插件，能使得 WordPress 博客获将显著的提速。</p>\n<p>  在使用WP Super Cache插件时，遇到了固定链接的问题：</p>\n<ol>\n<li>WP Super Cache插件的使用前提是网站需要开启固定链接</li>\n</ol>\n<p><img src=\"https://exp-picture.cdn.bcebos.com/5c9c964ce54a2f2719b20ab5e00192dd3240f4f0.jpg?x-bce-process=image/resize,m_lfit,w_500,limit_1\" alt=\"wordpress设置固定链接后页面404错误怎么办\"></p>\n<ol start=\"2\">\n<li>个人博客开启固定链接时，整个博客会出现404，导致整个网站崩溃：</li>\n</ol>\n<p><img src=\"https://exp-picture.cdn.bcebos.com/90c61d1c99c0affce9d8069c2372941fbfe4eaf0.jpg?x-bce-process=image/resize,m_lfit,w_500,limit_1\" alt=\"wordpress设置固定链接后页面404错误怎么办\"></p>\n<h4 id=\"解决办法：\"><a href=\"#解决办法：\" class=\"headerlink\" title=\"解决办法：\"></a>解决办法：</h4></li>\n<li><p>&#96;&#96;&#96;shell<br>vim &#x2F;etc&#x2F;httpd&#x2F;conf&#x2F;httpd.conf\t\t打开Apache配置文件</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">   （找这个文件耗了非常久的时间，一是找到apache配置，wordpress配置）</span><br><span class=\"line\"></span><br><span class=\"line\">- 在该文件中，修改配置</span><br><span class=\"line\"></span><br><span class=\"line\">注意：需要在&lt;Directory &quot;/var/www/html&quot;&gt;配置下的</span><br><span class=\"line\"></span><br><span class=\"line\">```shell</span><br><span class=\"line\">AllOverride None 进行修改</span><br></pre></td></tr></table></figure></li>\n</ul>\n<p>把“None”修改为“All”</p>\n<p><img src=\"https://exp-picture.cdn.bcebos.com/df087f0f8b56ad040c36355adae10ef85956d0f0.jpg?x-bce-process=image/resize,m_lfit,w_500,limit_1\" alt=\"wordpress设置固定链接后页面404错误怎么办\"></p>\n<ul>\n<li><p>最后重启Apache服务，问题解决！</p>\n<h3 id=\"补充一下关于Apcahe相关的知识：\"><a href=\"#补充一下关于Apcahe相关的知识：\" class=\"headerlink\" title=\"补充一下关于Apcahe相关的知识：\"></a>补充一下关于Apcahe相关的知识：</h3><p>​    对于Linux系统中服务的配置就是在修改其配置文件，因此还需要知道这些配置文件分别干什么用的，以及存放到了什么位置：</p>\n<table>\n<thead>\n<tr>\n<th>服务目录</th>\n<th>&#x2F;etc&#x2F;httpd</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>主配置文件</td>\n<td>&#x2F;etc&#x2F;httpd&#x2F;conf&#x2F;httpd.conf</td>\n</tr>\n<tr>\n<td>网站数据目录</td>\n<td>&#x2F;var&#x2F;www&#x2F;html</td>\n</tr>\n<tr>\n<td>访问日志</td>\n<td>&#x2F;var&#x2F;log&#x2F;httpd&#x2F;access_log</td>\n</tr>\n<tr>\n<td>错误日志</td>\n<td>&#x2F;var&#x2F;log&#x2F;httpd&#x2F;error_log</td>\n</tr>\n</tbody></table>\n<p>（采用自：<a href=\"https://blog.csdn.net/shj_php/article/details/79495861%EF%BC%89\">https://blog.csdn.net/shj_php/article/details/79495861）</a></p>\n<h3 id=\"补充一下关于固定链接的相关知识：\"><a href=\"#补充一下关于固定链接的相关知识：\" class=\"headerlink\" title=\"补充一下关于固定链接的相关知识：\"></a>补充一下关于固定链接的相关知识：</h3><p>​    固定链接是你个人博客里的文章、分类以及其他页面的固定链接地址。通过固定链接，别的博友可以链到你写的博客，你也可以将这个链接地址写在邮件里发给其他人看。如果博客的链接地址变来变去，会造成其他人通过之前的链接地址来浏览博客时出错，所以每篇博客的链接地址都应该固定，而且永久不改———这也是<em>固定</em>链接名字的由来。</p>\n<p>更多：<a href=\"https://codex.wordpress.org/zh-cn:%E4%BD%BF%E7%94%A8%E5%9B%BA%E5%AE%9A%E9%93%BE%E6%8E%A5\">https://codex.wordpress.org/zh-cn:%E4%BD%BF%E7%94%A8%E5%9B%BA%E5%AE%9A%E9%93%BE%E6%8E%A5</a></p>\n<p>（wordpress官方文档）</p>\n</li>\n</ul>\n"},{"_content":"### 数据结构学习\n\n网站https://www.cs.usfca.edu/~galles/visualization/Algorithms.html\n\n","source":"_posts/数据结构学习.md","raw":"### 数据结构学习\n\n网站https://www.cs.usfca.edu/~galles/visualization/Algorithms.html\n\n","slug":"数据结构学习","published":1,"date":"2020-10-19T09:06:39.000Z","updated":"2020-10-19T09:06:39.000Z","title":"","comments":1,"layout":"post","photos":[],"link":"","_id":"cldnbidhz0008u99kdrnx0ylv","content":"<h3 id=\"数据结构学习\"><a href=\"#数据结构学习\" class=\"headerlink\" title=\"数据结构学习\"></a>数据结构学习</h3><p>网站<a href=\"https://www.cs.usfca.edu/~galles/visualization/Algorithms.html\">https://www.cs.usfca.edu/~galles/visualization/Algorithms.html</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"数据结构学习\"><a href=\"#数据结构学习\" class=\"headerlink\" title=\"数据结构学习\"></a>数据结构学习</h3><p>网站<a href=\"https://www.cs.usfca.edu/~galles/visualization/Algorithms.html\">https://www.cs.usfca.edu/~galles/visualization/Algorithms.html</a></p>\n"},{"_content":"选择排序是最为稳定的排序算法之一，无论什么数据进去时间复杂度都为O(n^2)。\n\n动画演示如下：(引用自网站)https://www.cnblogs.com/onepixel/articles/7674659.html#!comments\n\n![img](https://images2017.cnblogs.com/blog/849589/201710/849589-20171015224719590-1433219824.gif)\n\n代码如下：\n\n```java\nimport java.util.Arrays;\n\npublic class SelectionSort {                            //选择排序\n    public static int[] SelectionSort(int arr[]){\n        int index;                                      //记录最小数的下标\n        int temp;                                       //数据交换使用的临时变量\n        for (int i = 0; i < arr.length - 1; i++) {\n            index = i;\n            for (int j = i; j < arr.length; j++) {\n                if (arr[j] < arr[index]){\n                    index = j;                          //记录最小的下标\n                }\n            }\n                temp = arr[i];                          //交换数据\n                arr[i] = arr[index];\n                arr[index] = temp;\n        }\n        return arr;\n    }\n    public static void main(String[] args) {\n        int arr[] = new int[]{5,79,32,74,35,76,33,15,6,0};\n        int arr1[] = new int[]{231,345,7654,23421,875,90,42,123,532};\n        int arr2[] = new int[]{1,3,2,5,4,7,6,9,9,10};\n        SelectionSort(arr);\n        SelectionSort(arr1);\n        SelectionSort(arr2);\n        System.out.println(Arrays.toString(arr));\n        System.out.println(Arrays.toString(arr1));\n        System.out.println(Arrays.toString(arr2));\n\n    }\n}\n\n```\n\n运行结果如下：\n\n```java\n[0, 5, 6, 15, 32, 33, 35, 74, 76, 79]\n[42, 90, 123, 231, 345, 532, 875, 7654, 23421]\n[1, 2, 3, 4, 5, 6, 7, 9, 9, 10]\n\nProcess finished with exit code 0\n```\n\n\n\n","source":"_posts/选择排序.md","raw":"选择排序是最为稳定的排序算法之一，无论什么数据进去时间复杂度都为O(n^2)。\n\n动画演示如下：(引用自网站)https://www.cnblogs.com/onepixel/articles/7674659.html#!comments\n\n![img](https://images2017.cnblogs.com/blog/849589/201710/849589-20171015224719590-1433219824.gif)\n\n代码如下：\n\n```java\nimport java.util.Arrays;\n\npublic class SelectionSort {                            //选择排序\n    public static int[] SelectionSort(int arr[]){\n        int index;                                      //记录最小数的下标\n        int temp;                                       //数据交换使用的临时变量\n        for (int i = 0; i < arr.length - 1; i++) {\n            index = i;\n            for (int j = i; j < arr.length; j++) {\n                if (arr[j] < arr[index]){\n                    index = j;                          //记录最小的下标\n                }\n            }\n                temp = arr[i];                          //交换数据\n                arr[i] = arr[index];\n                arr[index] = temp;\n        }\n        return arr;\n    }\n    public static void main(String[] args) {\n        int arr[] = new int[]{5,79,32,74,35,76,33,15,6,0};\n        int arr1[] = new int[]{231,345,7654,23421,875,90,42,123,532};\n        int arr2[] = new int[]{1,3,2,5,4,7,6,9,9,10};\n        SelectionSort(arr);\n        SelectionSort(arr1);\n        SelectionSort(arr2);\n        System.out.println(Arrays.toString(arr));\n        System.out.println(Arrays.toString(arr1));\n        System.out.println(Arrays.toString(arr2));\n\n    }\n}\n\n```\n\n运行结果如下：\n\n```java\n[0, 5, 6, 15, 32, 33, 35, 74, 76, 79]\n[42, 90, 123, 231, 345, 532, 875, 7654, 23421]\n[1, 2, 3, 4, 5, 6, 7, 9, 9, 10]\n\nProcess finished with exit code 0\n```\n\n\n\n","slug":"选择排序","published":1,"date":"2020-10-31T11:13:14.000Z","updated":"2020-10-31T11:13:14.000Z","title":"","comments":1,"layout":"post","photos":[],"link":"","_id":"cldnbidi10009u99kdm2w1xz2","content":"<p>选择排序是最为稳定的排序算法之一，无论什么数据进去时间复杂度都为O(n^2)。</p>\n<p>动画演示如下：(引用自网站)<a href=\"https://www.cnblogs.com/onepixel/articles/7674659.html#!comments\">https://www.cnblogs.com/onepixel/articles/7674659.html#!comments</a></p>\n<p><img src=\"https://images2017.cnblogs.com/blog/849589/201710/849589-20171015224719590-1433219824.gif\" alt=\"img\"></p>\n<p>代码如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.Arrays;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">SelectionSort</span> &#123;                            <span class=\"comment\">//选择排序</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"type\">int</span>[] SelectionSort(<span class=\"type\">int</span> arr[])&#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> index;                                      <span class=\"comment\">//记录最小数的下标</span></span><br><span class=\"line\">        <span class=\"type\">int</span> temp;                                       <span class=\"comment\">//数据交换使用的临时变量</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; arr.length - <span class=\"number\">1</span>; i++) &#123;</span><br><span class=\"line\">            index = i;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">j</span> <span class=\"operator\">=</span> i; j &lt; arr.length; j++) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (arr[j] &lt; arr[index])&#123;</span><br><span class=\"line\">                    index = j;                          <span class=\"comment\">//记录最小的下标</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">                temp = arr[i];                          <span class=\"comment\">//交换数据</span></span><br><span class=\"line\">                arr[i] = arr[index];</span><br><span class=\"line\">                arr[index] = temp;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> arr;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> arr[] = <span class=\"keyword\">new</span> <span class=\"title class_\">int</span>[]&#123;<span class=\"number\">5</span>,<span class=\"number\">79</span>,<span class=\"number\">32</span>,<span class=\"number\">74</span>,<span class=\"number\">35</span>,<span class=\"number\">76</span>,<span class=\"number\">33</span>,<span class=\"number\">15</span>,<span class=\"number\">6</span>,<span class=\"number\">0</span>&#125;;</span><br><span class=\"line\">        <span class=\"type\">int</span> arr1[] = <span class=\"keyword\">new</span> <span class=\"title class_\">int</span>[]&#123;<span class=\"number\">231</span>,<span class=\"number\">345</span>,<span class=\"number\">7654</span>,<span class=\"number\">23421</span>,<span class=\"number\">875</span>,<span class=\"number\">90</span>,<span class=\"number\">42</span>,<span class=\"number\">123</span>,<span class=\"number\">532</span>&#125;;</span><br><span class=\"line\">        <span class=\"type\">int</span> arr2[] = <span class=\"keyword\">new</span> <span class=\"title class_\">int</span>[]&#123;<span class=\"number\">1</span>,<span class=\"number\">3</span>,<span class=\"number\">2</span>,<span class=\"number\">5</span>,<span class=\"number\">4</span>,<span class=\"number\">7</span>,<span class=\"number\">6</span>,<span class=\"number\">9</span>,<span class=\"number\">9</span>,<span class=\"number\">10</span>&#125;;</span><br><span class=\"line\">        SelectionSort(arr);</span><br><span class=\"line\">        SelectionSort(arr1);</span><br><span class=\"line\">        SelectionSort(arr2);</span><br><span class=\"line\">        System.out.println(Arrays.toString(arr));</span><br><span class=\"line\">        System.out.println(Arrays.toString(arr1));</span><br><span class=\"line\">        System.out.println(Arrays.toString(arr2));</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>运行结果如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[<span class=\"number\">0</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>, <span class=\"number\">15</span>, <span class=\"number\">32</span>, <span class=\"number\">33</span>, <span class=\"number\">35</span>, <span class=\"number\">74</span>, <span class=\"number\">76</span>, <span class=\"number\">79</span>]</span><br><span class=\"line\">[<span class=\"number\">42</span>, <span class=\"number\">90</span>, <span class=\"number\">123</span>, <span class=\"number\">231</span>, <span class=\"number\">345</span>, <span class=\"number\">532</span>, <span class=\"number\">875</span>, <span class=\"number\">7654</span>, <span class=\"number\">23421</span>]</span><br><span class=\"line\">[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>, <span class=\"number\">7</span>, <span class=\"number\">9</span>, <span class=\"number\">9</span>, <span class=\"number\">10</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">Process finished with exit code <span class=\"number\">0</span></span><br></pre></td></tr></table></figure>\n\n\n\n","site":{"data":{}},"excerpt":"","more":"<p>选择排序是最为稳定的排序算法之一，无论什么数据进去时间复杂度都为O(n^2)。</p>\n<p>动画演示如下：(引用自网站)<a href=\"https://www.cnblogs.com/onepixel/articles/7674659.html#!comments\">https://www.cnblogs.com/onepixel/articles/7674659.html#!comments</a></p>\n<p><img src=\"https://images2017.cnblogs.com/blog/849589/201710/849589-20171015224719590-1433219824.gif\" alt=\"img\"></p>\n<p>代码如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.Arrays;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">SelectionSort</span> &#123;                            <span class=\"comment\">//选择排序</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"type\">int</span>[] SelectionSort(<span class=\"type\">int</span> arr[])&#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> index;                                      <span class=\"comment\">//记录最小数的下标</span></span><br><span class=\"line\">        <span class=\"type\">int</span> temp;                                       <span class=\"comment\">//数据交换使用的临时变量</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; arr.length - <span class=\"number\">1</span>; i++) &#123;</span><br><span class=\"line\">            index = i;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">j</span> <span class=\"operator\">=</span> i; j &lt; arr.length; j++) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (arr[j] &lt; arr[index])&#123;</span><br><span class=\"line\">                    index = j;                          <span class=\"comment\">//记录最小的下标</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">                temp = arr[i];                          <span class=\"comment\">//交换数据</span></span><br><span class=\"line\">                arr[i] = arr[index];</span><br><span class=\"line\">                arr[index] = temp;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> arr;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> arr[] = <span class=\"keyword\">new</span> <span class=\"title class_\">int</span>[]&#123;<span class=\"number\">5</span>,<span class=\"number\">79</span>,<span class=\"number\">32</span>,<span class=\"number\">74</span>,<span class=\"number\">35</span>,<span class=\"number\">76</span>,<span class=\"number\">33</span>,<span class=\"number\">15</span>,<span class=\"number\">6</span>,<span class=\"number\">0</span>&#125;;</span><br><span class=\"line\">        <span class=\"type\">int</span> arr1[] = <span class=\"keyword\">new</span> <span class=\"title class_\">int</span>[]&#123;<span class=\"number\">231</span>,<span class=\"number\">345</span>,<span class=\"number\">7654</span>,<span class=\"number\">23421</span>,<span class=\"number\">875</span>,<span class=\"number\">90</span>,<span class=\"number\">42</span>,<span class=\"number\">123</span>,<span class=\"number\">532</span>&#125;;</span><br><span class=\"line\">        <span class=\"type\">int</span> arr2[] = <span class=\"keyword\">new</span> <span class=\"title class_\">int</span>[]&#123;<span class=\"number\">1</span>,<span class=\"number\">3</span>,<span class=\"number\">2</span>,<span class=\"number\">5</span>,<span class=\"number\">4</span>,<span class=\"number\">7</span>,<span class=\"number\">6</span>,<span class=\"number\">9</span>,<span class=\"number\">9</span>,<span class=\"number\">10</span>&#125;;</span><br><span class=\"line\">        SelectionSort(arr);</span><br><span class=\"line\">        SelectionSort(arr1);</span><br><span class=\"line\">        SelectionSort(arr2);</span><br><span class=\"line\">        System.out.println(Arrays.toString(arr));</span><br><span class=\"line\">        System.out.println(Arrays.toString(arr1));</span><br><span class=\"line\">        System.out.println(Arrays.toString(arr2));</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>运行结果如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[<span class=\"number\">0</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>, <span class=\"number\">15</span>, <span class=\"number\">32</span>, <span class=\"number\">33</span>, <span class=\"number\">35</span>, <span class=\"number\">74</span>, <span class=\"number\">76</span>, <span class=\"number\">79</span>]</span><br><span class=\"line\">[<span class=\"number\">42</span>, <span class=\"number\">90</span>, <span class=\"number\">123</span>, <span class=\"number\">231</span>, <span class=\"number\">345</span>, <span class=\"number\">532</span>, <span class=\"number\">875</span>, <span class=\"number\">7654</span>, <span class=\"number\">23421</span>]</span><br><span class=\"line\">[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>, <span class=\"number\">7</span>, <span class=\"number\">9</span>, <span class=\"number\">9</span>, <span class=\"number\">10</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">Process finished with exit code <span class=\"number\">0</span></span><br></pre></td></tr></table></figure>\n\n\n\n"},{"_content":"## 计算机组成原理复习\n\n- 目前为止，计算机中所有信息仍以二进制方式表示的理由是，由物理器件的性能决定，0，1，和逻辑电路中的高，低电平对应\n- Cache 和主存的映射方式：\n  1. 直接映射\n  2. 全相联映射\n  3. 组相连映射\n- ","source":"_posts/计算机组成原理复习.md","raw":"## 计算机组成原理复习\n\n- 目前为止，计算机中所有信息仍以二进制方式表示的理由是，由物理器件的性能决定，0，1，和逻辑电路中的高，低电平对应\n- Cache 和主存的映射方式：\n  1. 直接映射\n  2. 全相联映射\n  3. 组相连映射\n- ","slug":"计算机组成原理复习","published":1,"date":"2020-06-28T15:54:55.000Z","updated":"2020-06-28T15:54:55.000Z","title":"","comments":1,"layout":"post","photos":[],"link":"","_id":"cldnbidi1000au99k4m6rh9pq","content":"<h2 id=\"计算机组成原理复习\"><a href=\"#计算机组成原理复习\" class=\"headerlink\" title=\"计算机组成原理复习\"></a>计算机组成原理复习</h2><ul>\n<li>目前为止，计算机中所有信息仍以二进制方式表示的理由是，由物理器件的性能决定，0，1，和逻辑电路中的高，低电平对应</li>\n<li>Cache 和主存的映射方式：<ol>\n<li>直接映射</li>\n<li>全相联映射</li>\n<li>组相连映射</li>\n</ol>\n</li>\n<li></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"计算机组成原理复习\"><a href=\"#计算机组成原理复习\" class=\"headerlink\" title=\"计算机组成原理复习\"></a>计算机组成原理复习</h2><ul>\n<li>目前为止，计算机中所有信息仍以二进制方式表示的理由是，由物理器件的性能决定，0，1，和逻辑电路中的高，低电平对应</li>\n<li>Cache 和主存的映射方式：<ol>\n<li>直接映射</li>\n<li>全相联映射</li>\n<li>组相连映射</li>\n</ol>\n</li>\n<li></li>\n</ul>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[],"Tag":[]}}